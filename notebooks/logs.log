2024-07-21 01:09:33,258:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-21 01:09:33,258:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-21 01:09:33,258:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-21 01:09:33,258:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-21 01:09:34,290:INFO:PyCaret ClassificationExperiment
2024-07-21 01:09:34,290:INFO:Logging name: clf-default-name
2024-07-21 01:09:34,290:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-21 01:09:34,290:INFO:version 3.3.2
2024-07-21 01:09:34,290:INFO:Initializing setup()
2024-07-21 01:09:34,291:INFO:self.USI: 73ee
2024-07-21 01:09:34,291:INFO:self._variable_keys: {'_ml_usecase', 'is_multiclass', 'data', 'memory', 'gpu_param', 'exp_id', 'log_plots_param', 'y', 'target_param', 'y_test', 'html_param', '_available_plots', 'fix_imbalance', 'logging_param', 'seed', 'fold_shuffle_param', 'pipeline', 'gpu_n_jobs_param', 'fold_groups_param', 'fold_generator', 'X_train', 'y_train', 'exp_name_log', 'X', 'idx', 'X_test', 'USI', 'n_jobs_param'}
2024-07-21 01:09:34,291:INFO:Checking environment
2024-07-21 01:09:34,291:INFO:python_version: 3.10.13
2024-07-21 01:09:34,291:INFO:python_build: ('main', 'Jul 11 2024 16:23:02')
2024-07-21 01:09:34,291:INFO:machine: x86_64
2024-07-21 01:09:34,291:INFO:platform: Linux-6.5.0-1022-azure-x86_64-with-glibc2.31
2024-07-21 01:09:34,291:INFO:Memory: svmem(total=16757342208, available=12122525696, percent=27.7, used=4203282432, free=381112320, active=5025644544, inactive=10328805376, buffers=247771136, cached=11925176320, shared=68321280, slab=818991104)
2024-07-21 01:09:34,292:INFO:Physical Core: 2
2024-07-21 01:09:34,292:INFO:Logical Core: 4
2024-07-21 01:09:34,292:INFO:Checking libraries
2024-07-21 01:09:34,292:INFO:System:
2024-07-21 01:09:34,292:INFO:    python: 3.10.13 (main, Jul 11 2024, 16:23:02) [GCC 9.4.0]
2024-07-21 01:09:34,292:INFO:executable: /home/codespace/.python/current/bin/python
2024-07-21 01:09:34,292:INFO:   machine: Linux-6.5.0-1022-azure-x86_64-with-glibc2.31
2024-07-21 01:09:34,292:INFO:PyCaret required dependencies:
2024-07-21 01:09:34,337:INFO:                 pip: 24.1.2
2024-07-21 01:09:34,337:INFO:          setuptools: 68.2.2
2024-07-21 01:09:34,337:INFO:             pycaret: 3.3.2
2024-07-21 01:09:34,337:INFO:             IPython: 8.26.0
2024-07-21 01:09:34,338:INFO:          ipywidgets: 8.1.3
2024-07-21 01:09:34,338:INFO:                tqdm: 4.66.4
2024-07-21 01:09:34,338:INFO:               numpy: 1.26.4
2024-07-21 01:09:34,338:INFO:              pandas: 2.1.4
2024-07-21 01:09:34,338:INFO:              jinja2: 3.1.4
2024-07-21 01:09:34,338:INFO:               scipy: 1.11.4
2024-07-21 01:09:34,338:INFO:              joblib: 1.3.2
2024-07-21 01:09:34,338:INFO:             sklearn: 1.4.2
2024-07-21 01:09:34,338:INFO:                pyod: 2.0.1
2024-07-21 01:09:34,338:INFO:            imblearn: 0.12.3
2024-07-21 01:09:34,338:INFO:   category_encoders: 2.6.3
2024-07-21 01:09:34,338:INFO:            lightgbm: 4.4.0
2024-07-21 01:09:34,338:INFO:               numba: 0.60.0
2024-07-21 01:09:34,338:INFO:            requests: 2.32.3
2024-07-21 01:09:34,339:INFO:          matplotlib: 3.7.5
2024-07-21 01:09:34,339:INFO:          scikitplot: 0.3.7
2024-07-21 01:09:34,339:INFO:         yellowbrick: 1.5
2024-07-21 01:09:34,339:INFO:              plotly: 5.22.0
2024-07-21 01:09:34,339:INFO:    plotly-resampler: Not installed
2024-07-21 01:09:34,339:INFO:             kaleido: 0.2.1
2024-07-21 01:09:34,339:INFO:           schemdraw: 0.15
2024-07-21 01:09:34,339:INFO:         statsmodels: 0.14.2
2024-07-21 01:09:34,339:INFO:              sktime: 0.26.0
2024-07-21 01:09:34,339:INFO:               tbats: 1.1.3
2024-07-21 01:09:34,339:INFO:            pmdarima: 2.0.4
2024-07-21 01:09:34,339:INFO:              psutil: 6.0.0
2024-07-21 01:09:34,339:INFO:          markupsafe: 2.1.5
2024-07-21 01:09:34,339:INFO:             pickle5: Not installed
2024-07-21 01:09:34,339:INFO:         cloudpickle: 3.0.0
2024-07-21 01:09:34,340:INFO:         deprecation: 2.1.0
2024-07-21 01:09:34,340:INFO:              xxhash: 3.4.1
2024-07-21 01:09:34,340:INFO:           wurlitzer: 3.1.1
2024-07-21 01:09:34,340:INFO:PyCaret optional dependencies:
2024-07-21 01:09:34,354:INFO:                shap: Not installed
2024-07-21 01:09:34,354:INFO:           interpret: Not installed
2024-07-21 01:09:34,355:INFO:                umap: Not installed
2024-07-21 01:09:34,355:INFO:     ydata_profiling: Not installed
2024-07-21 01:09:34,355:INFO:  explainerdashboard: Not installed
2024-07-21 01:09:34,355:INFO:             autoviz: Not installed
2024-07-21 01:09:34,355:INFO:           fairlearn: Not installed
2024-07-21 01:09:34,355:INFO:          deepchecks: Not installed
2024-07-21 01:09:34,355:INFO:             xgboost: Not installed
2024-07-21 01:09:34,355:INFO:            catboost: Not installed
2024-07-21 01:09:34,355:INFO:              kmodes: Not installed
2024-07-21 01:09:34,355:INFO:             mlxtend: Not installed
2024-07-21 01:09:34,355:INFO:       statsforecast: Not installed
2024-07-21 01:09:34,355:INFO:        tune_sklearn: Not installed
2024-07-21 01:09:34,355:INFO:                 ray: Not installed
2024-07-21 01:09:34,355:INFO:            hyperopt: Not installed
2024-07-21 01:09:34,355:INFO:              optuna: Not installed
2024-07-21 01:09:34,356:INFO:               skopt: Not installed
2024-07-21 01:09:34,356:INFO:              mlflow: Not installed
2024-07-21 01:09:34,356:INFO:              gradio: Not installed
2024-07-21 01:09:34,356:INFO:             fastapi: Not installed
2024-07-21 01:09:34,356:INFO:             uvicorn: Not installed
2024-07-21 01:09:34,356:INFO:              m2cgen: Not installed
2024-07-21 01:09:34,356:INFO:           evidently: Not installed
2024-07-21 01:09:34,356:INFO:               fugue: Not installed
2024-07-21 01:09:34,356:INFO:           streamlit: Not installed
2024-07-21 01:09:34,356:INFO:             prophet: Not installed
2024-07-21 01:09:34,356:INFO:None
2024-07-21 01:09:34,356:INFO:Set up data.
2024-07-21 01:09:34,373:INFO:Set up folding strategy.
2024-07-21 01:09:34,374:INFO:Set up train/test split.
2024-07-21 01:09:34,388:INFO:Set up index.
2024-07-21 01:09:34,388:INFO:Assigning column types.
2024-07-21 01:09:34,393:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-21 01:09:34,435:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-21 01:09:34,438:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-21 01:09:34,465:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-21 01:09:34,465:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-21 01:09:34,507:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-21 01:09:34,508:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-21 01:09:34,533:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-21 01:09:34,533:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-21 01:09:34,533:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-21 01:09:34,575:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-21 01:09:34,600:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-21 01:09:34,600:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-21 01:09:34,718:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-21 01:09:34,743:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-21 01:09:34,744:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-21 01:09:34,744:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-07-21 01:09:34,808:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-21 01:09:34,809:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-21 01:09:34,873:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-21 01:09:34,874:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-21 01:09:34,876:INFO:Preparing preprocessing pipeline...
2024-07-21 01:09:34,877:INFO:Set up label encoding.
2024-07-21 01:09:34,877:INFO:Set up simple imputation.
2024-07-21 01:09:34,882:INFO:Set up encoding of ordinal features.
2024-07-21 01:09:34,888:INFO:Set up encoding of categorical features.
2024-07-21 01:09:35,174:INFO:Finished creating preprocessing pipeline.
2024-07-21 01:09:35,221:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SeniorCitizen', 'tenure',
                                             'MonthlyCharges'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_fea...
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['TotalCharges'],
                                    transformer=TargetEncoder(cols=['TotalCharges'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2024-07-21 01:09:35,221:INFO:Creating final display dataframe.
2024-07-21 01:09:35,839:INFO:Setup _display_container:                     Description             Value
0                    Session id                35
1                        Target             Churn
2                   Target type            Binary
3                Target mapping     No: 0, Yes: 1
4           Original data shape        (4930, 20)
5        Transformed data shape        (4930, 41)
6   Transformed train set shape        (3451, 41)
7    Transformed test set shape        (1479, 41)
8              Numeric features                 3
9          Categorical features                16
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator             KFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  clf-default-name
22                          USI              73ee
2024-07-21 01:09:35,909:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-21 01:09:35,909:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-21 01:09:35,987:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-21 01:09:35,987:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-21 01:09:35,988:INFO:setup() successfully completed in 1.7s...............
2024-07-21 01:09:35,994:INFO:Initializing compare_models()
2024-07-21 01:09:35,995:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x78995494fbb0>, include=None, fold=5, round=4, cross_validation=True, sort=Accuracy, n_select=10, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x78995494fbb0>, 'include': None, 'exclude': None, 'fold': 5, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 10, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-07-21 01:09:35,995:INFO:Checking exceptions
2024-07-21 01:09:36,000:INFO:Preparing display monitor
2024-07-21 01:09:36,021:INFO:Initializing Logistic Regression
2024-07-21 01:09:36,022:INFO:Total runtime is 2.8093655904134114e-06 minutes
2024-07-21 01:09:36,025:INFO:SubProcess create_model() called ==================================
2024-07-21 01:09:36,025:INFO:Initializing create_model()
2024-07-21 01:09:36,025:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x78995494fbb0>, estimator=lr, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x789958a36200>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-21 01:09:36,025:INFO:Checking exceptions
2024-07-21 01:09:36,025:INFO:Importing libraries
2024-07-21 01:09:36,025:INFO:Copying training dataset
2024-07-21 01:09:36,030:INFO:Defining folds
2024-07-21 01:09:36,030:INFO:Declaring metric variables
2024-07-21 01:09:36,033:INFO:Importing untrained model
2024-07-21 01:09:36,037:INFO:Logistic Regression Imported successfully
2024-07-21 01:09:36,043:INFO:Starting cross validation
2024-07-21 01:09:36,046:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-07-21 01:09:40,561:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:40,581:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:40,612:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:40,825:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:40,867:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:40,900:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:41,142:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:41,155:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:41,173:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:41,275:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:41,285:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:41,300:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:41,709:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:41,719:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:41,728:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:41,747:INFO:Calculating mean and std
2024-07-21 01:09:41,749:INFO:Creating metrics dataframe
2024-07-21 01:09:41,754:INFO:Uploading results into container
2024-07-21 01:09:41,755:INFO:Uploading model into container now
2024-07-21 01:09:41,756:INFO:_master_model_container: 1
2024-07-21 01:09:41,756:INFO:_display_container: 2
2024-07-21 01:09:41,756:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=35, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-07-21 01:09:41,757:INFO:create_model() successfully completed......................................
2024-07-21 01:09:41,872:INFO:SubProcess create_model() end ==================================
2024-07-21 01:09:41,873:INFO:Creating metrics dataframe
2024-07-21 01:09:41,906:INFO:Initializing K Neighbors Classifier
2024-07-21 01:09:41,907:INFO:Total runtime is 0.09808943271636962 minutes
2024-07-21 01:09:41,912:INFO:SubProcess create_model() called ==================================
2024-07-21 01:09:41,913:INFO:Initializing create_model()
2024-07-21 01:09:41,913:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x78995494fbb0>, estimator=knn, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x789958a36200>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-21 01:09:41,913:INFO:Checking exceptions
2024-07-21 01:09:41,913:INFO:Importing libraries
2024-07-21 01:09:41,913:INFO:Copying training dataset
2024-07-21 01:09:41,924:INFO:Defining folds
2024-07-21 01:09:41,924:INFO:Declaring metric variables
2024-07-21 01:09:41,942:INFO:Importing untrained model
2024-07-21 01:09:41,958:INFO:K Neighbors Classifier Imported successfully
2024-07-21 01:09:41,978:INFO:Starting cross validation
2024-07-21 01:09:41,984:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-07-21 01:09:42,829:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:42,840:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:42,863:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:42,908:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:42,932:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:42,942:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:43,309:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:43,318:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:43,331:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:43,333:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:43,353:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:43,361:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:43,555:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:43,564:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:43,573:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:43,590:INFO:Calculating mean and std
2024-07-21 01:09:43,592:INFO:Creating metrics dataframe
2024-07-21 01:09:43,596:INFO:Uploading results into container
2024-07-21 01:09:43,596:INFO:Uploading model into container now
2024-07-21 01:09:43,597:INFO:_master_model_container: 2
2024-07-21 01:09:43,597:INFO:_display_container: 2
2024-07-21 01:09:43,598:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-07-21 01:09:43,598:INFO:create_model() successfully completed......................................
2024-07-21 01:09:43,736:INFO:SubProcess create_model() end ==================================
2024-07-21 01:09:43,736:INFO:Creating metrics dataframe
2024-07-21 01:09:43,744:INFO:Initializing Naive Bayes
2024-07-21 01:09:43,744:INFO:Total runtime is 0.12870771487553914 minutes
2024-07-21 01:09:43,748:INFO:SubProcess create_model() called ==================================
2024-07-21 01:09:43,748:INFO:Initializing create_model()
2024-07-21 01:09:43,748:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x78995494fbb0>, estimator=nb, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x789958a36200>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-21 01:09:43,748:INFO:Checking exceptions
2024-07-21 01:09:43,749:INFO:Importing libraries
2024-07-21 01:09:43,749:INFO:Copying training dataset
2024-07-21 01:09:43,760:INFO:Defining folds
2024-07-21 01:09:43,760:INFO:Declaring metric variables
2024-07-21 01:09:43,778:INFO:Importing untrained model
2024-07-21 01:09:43,782:INFO:Naive Bayes Imported successfully
2024-07-21 01:09:43,801:INFO:Starting cross validation
2024-07-21 01:09:43,806:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-07-21 01:09:44,535:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:44,546:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:44,555:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:44,663:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:44,665:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:44,674:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:44,683:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:44,697:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:44,702:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:44,705:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:44,720:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:44,733:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:44,923:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:44,929:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:44,935:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:44,948:INFO:Calculating mean and std
2024-07-21 01:09:44,949:INFO:Creating metrics dataframe
2024-07-21 01:09:44,951:INFO:Uploading results into container
2024-07-21 01:09:44,952:INFO:Uploading model into container now
2024-07-21 01:09:44,953:INFO:_master_model_container: 3
2024-07-21 01:09:44,953:INFO:_display_container: 2
2024-07-21 01:09:44,953:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-07-21 01:09:44,953:INFO:create_model() successfully completed......................................
2024-07-21 01:09:45,036:INFO:SubProcess create_model() end ==================================
2024-07-21 01:09:45,036:INFO:Creating metrics dataframe
2024-07-21 01:09:45,045:INFO:Initializing Decision Tree Classifier
2024-07-21 01:09:45,045:INFO:Total runtime is 0.1503988226254781 minutes
2024-07-21 01:09:45,050:INFO:SubProcess create_model() called ==================================
2024-07-21 01:09:45,051:INFO:Initializing create_model()
2024-07-21 01:09:45,051:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x78995494fbb0>, estimator=dt, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x789958a36200>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-21 01:09:45,051:INFO:Checking exceptions
2024-07-21 01:09:45,051:INFO:Importing libraries
2024-07-21 01:09:45,051:INFO:Copying training dataset
2024-07-21 01:09:45,060:INFO:Defining folds
2024-07-21 01:09:45,060:INFO:Declaring metric variables
2024-07-21 01:09:45,065:INFO:Importing untrained model
2024-07-21 01:09:45,070:INFO:Decision Tree Classifier Imported successfully
2024-07-21 01:09:45,078:INFO:Starting cross validation
2024-07-21 01:09:45,082:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-07-21 01:09:45,600:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:45,616:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:45,626:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:45,628:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:45,635:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:45,649:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:45,707:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:45,717:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:45,726:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:45,832:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:45,841:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:45,849:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:46,046:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:46,053:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:46,059:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:46,069:INFO:Calculating mean and std
2024-07-21 01:09:46,071:INFO:Creating metrics dataframe
2024-07-21 01:09:46,074:INFO:Uploading results into container
2024-07-21 01:09:46,074:INFO:Uploading model into container now
2024-07-21 01:09:46,075:INFO:_master_model_container: 4
2024-07-21 01:09:46,075:INFO:_display_container: 2
2024-07-21 01:09:46,076:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=35, splitter='best')
2024-07-21 01:09:46,076:INFO:create_model() successfully completed......................................
2024-07-21 01:09:46,178:INFO:SubProcess create_model() end ==================================
2024-07-21 01:09:46,178:INFO:Creating metrics dataframe
2024-07-21 01:09:46,186:INFO:Initializing SVM - Linear Kernel
2024-07-21 01:09:46,186:INFO:Total runtime is 0.16941007375717163 minutes
2024-07-21 01:09:46,189:INFO:SubProcess create_model() called ==================================
2024-07-21 01:09:46,189:INFO:Initializing create_model()
2024-07-21 01:09:46,190:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x78995494fbb0>, estimator=svm, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x789958a36200>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-21 01:09:46,190:INFO:Checking exceptions
2024-07-21 01:09:46,190:INFO:Importing libraries
2024-07-21 01:09:46,190:INFO:Copying training dataset
2024-07-21 01:09:46,195:INFO:Defining folds
2024-07-21 01:09:46,195:INFO:Declaring metric variables
2024-07-21 01:09:46,199:INFO:Importing untrained model
2024-07-21 01:09:46,202:INFO:SVM - Linear Kernel Imported successfully
2024-07-21 01:09:46,208:INFO:Starting cross validation
2024-07-21 01:09:46,211:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-07-21 01:09:46,639:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:46,659:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:46,670:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:46,671:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:46,686:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:46,697:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:46,706:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:46,715:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:46,720:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-21 01:09:46,725:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:46,726:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:46,735:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:46,744:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:46,982:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:46,990:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:46,998:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:47,020:INFO:Calculating mean and std
2024-07-21 01:09:47,021:INFO:Creating metrics dataframe
2024-07-21 01:09:47,023:INFO:Uploading results into container
2024-07-21 01:09:47,024:INFO:Uploading model into container now
2024-07-21 01:09:47,024:INFO:_master_model_container: 5
2024-07-21 01:09:47,024:INFO:_display_container: 2
2024-07-21 01:09:47,025:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=35, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-07-21 01:09:47,025:INFO:create_model() successfully completed......................................
2024-07-21 01:09:47,101:INFO:SubProcess create_model() end ==================================
2024-07-21 01:09:47,101:INFO:Creating metrics dataframe
2024-07-21 01:09:47,109:INFO:Initializing Ridge Classifier
2024-07-21 01:09:47,109:INFO:Total runtime is 0.18479612668355305 minutes
2024-07-21 01:09:47,112:INFO:SubProcess create_model() called ==================================
2024-07-21 01:09:47,113:INFO:Initializing create_model()
2024-07-21 01:09:47,113:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x78995494fbb0>, estimator=ridge, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x789958a36200>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-21 01:09:47,113:INFO:Checking exceptions
2024-07-21 01:09:47,113:INFO:Importing libraries
2024-07-21 01:09:47,113:INFO:Copying training dataset
2024-07-21 01:09:47,118:INFO:Defining folds
2024-07-21 01:09:47,118:INFO:Declaring metric variables
2024-07-21 01:09:47,121:INFO:Importing untrained model
2024-07-21 01:09:47,124:INFO:Ridge Classifier Imported successfully
2024-07-21 01:09:47,131:INFO:Starting cross validation
2024-07-21 01:09:47,134:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-07-21 01:09:47,526:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:47,535:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:47,545:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:47,553:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:47,562:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:47,566:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:47,573:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:47,573:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:47,576:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:47,585:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:47,586:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:47,596:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:47,803:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:47,808:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:47,814:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:47,824:INFO:Calculating mean and std
2024-07-21 01:09:47,824:INFO:Creating metrics dataframe
2024-07-21 01:09:47,826:INFO:Uploading results into container
2024-07-21 01:09:47,827:INFO:Uploading model into container now
2024-07-21 01:09:47,828:INFO:_master_model_container: 6
2024-07-21 01:09:47,828:INFO:_display_container: 2
2024-07-21 01:09:47,828:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=35, solver='auto',
                tol=0.0001)
2024-07-21 01:09:47,829:INFO:create_model() successfully completed......................................
2024-07-21 01:09:47,899:INFO:SubProcess create_model() end ==================================
2024-07-21 01:09:47,900:INFO:Creating metrics dataframe
2024-07-21 01:09:47,907:INFO:Initializing Random Forest Classifier
2024-07-21 01:09:47,907:INFO:Total runtime is 0.1980994423230489 minutes
2024-07-21 01:09:47,911:INFO:SubProcess create_model() called ==================================
2024-07-21 01:09:47,911:INFO:Initializing create_model()
2024-07-21 01:09:47,911:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x78995494fbb0>, estimator=rf, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x789958a36200>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-21 01:09:47,911:INFO:Checking exceptions
2024-07-21 01:09:47,912:INFO:Importing libraries
2024-07-21 01:09:47,912:INFO:Copying training dataset
2024-07-21 01:09:47,917:INFO:Defining folds
2024-07-21 01:09:47,917:INFO:Declaring metric variables
2024-07-21 01:09:47,920:INFO:Importing untrained model
2024-07-21 01:09:47,923:INFO:Random Forest Classifier Imported successfully
2024-07-21 01:09:47,929:INFO:Starting cross validation
2024-07-21 01:09:47,932:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-07-21 01:09:48,769:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:48,779:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:48,789:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:48,789:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:48,797:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:48,799:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:48,804:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:48,806:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:48,808:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:48,815:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:48,823:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:48,831:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:49,298:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:49,306:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:49,313:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:49,328:INFO:Calculating mean and std
2024-07-21 01:09:49,329:INFO:Creating metrics dataframe
2024-07-21 01:09:49,332:INFO:Uploading results into container
2024-07-21 01:09:49,333:INFO:Uploading model into container now
2024-07-21 01:09:49,333:INFO:_master_model_container: 7
2024-07-21 01:09:49,333:INFO:_display_container: 2
2024-07-21 01:09:49,334:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=35, verbose=0,
                       warm_start=False)
2024-07-21 01:09:49,334:INFO:create_model() successfully completed......................................
2024-07-21 01:09:49,425:INFO:SubProcess create_model() end ==================================
2024-07-21 01:09:49,426:INFO:Creating metrics dataframe
2024-07-21 01:09:49,434:INFO:Initializing Quadratic Discriminant Analysis
2024-07-21 01:09:49,434:INFO:Total runtime is 0.22354602416356403 minutes
2024-07-21 01:09:49,438:INFO:SubProcess create_model() called ==================================
2024-07-21 01:09:49,438:INFO:Initializing create_model()
2024-07-21 01:09:49,438:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x78995494fbb0>, estimator=qda, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x789958a36200>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-21 01:09:49,438:INFO:Checking exceptions
2024-07-21 01:09:49,438:INFO:Importing libraries
2024-07-21 01:09:49,439:INFO:Copying training dataset
2024-07-21 01:09:49,444:INFO:Defining folds
2024-07-21 01:09:49,444:INFO:Declaring metric variables
2024-07-21 01:09:49,448:INFO:Importing untrained model
2024-07-21 01:09:49,451:INFO:Quadratic Discriminant Analysis Imported successfully
2024-07-21 01:09:49,457:INFO:Starting cross validation
2024-07-21 01:09:49,461:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-07-21 01:09:49,763:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-21 01:09:49,766:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-21 01:09:49,768:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-21 01:09:49,826:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-21 01:09:49,869:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:49,872:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:49,879:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:49,882:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:49,889:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:49,891:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:49,896:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:49,905:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:49,915:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:49,920:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:49,926:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:49,931:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:50,084:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-21 01:09:50,148:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:50,153:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:50,158:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:50,176:INFO:Calculating mean and std
2024-07-21 01:09:50,177:INFO:Creating metrics dataframe
2024-07-21 01:09:50,179:INFO:Uploading results into container
2024-07-21 01:09:50,180:INFO:Uploading model into container now
2024-07-21 01:09:50,180:INFO:_master_model_container: 8
2024-07-21 01:09:50,181:INFO:_display_container: 2
2024-07-21 01:09:50,181:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-07-21 01:09:50,181:INFO:create_model() successfully completed......................................
2024-07-21 01:09:50,255:INFO:SubProcess create_model() end ==================================
2024-07-21 01:09:50,255:INFO:Creating metrics dataframe
2024-07-21 01:09:50,264:INFO:Initializing Ada Boost Classifier
2024-07-21 01:09:50,264:INFO:Total runtime is 0.23737226724624633 minutes
2024-07-21 01:09:50,267:INFO:SubProcess create_model() called ==================================
2024-07-21 01:09:50,267:INFO:Initializing create_model()
2024-07-21 01:09:50,267:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x78995494fbb0>, estimator=ada, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x789958a36200>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-21 01:09:50,267:INFO:Checking exceptions
2024-07-21 01:09:50,268:INFO:Importing libraries
2024-07-21 01:09:50,268:INFO:Copying training dataset
2024-07-21 01:09:50,273:INFO:Defining folds
2024-07-21 01:09:50,273:INFO:Declaring metric variables
2024-07-21 01:09:50,276:INFO:Importing untrained model
2024-07-21 01:09:50,279:INFO:Ada Boost Classifier Imported successfully
2024-07-21 01:09:50,286:INFO:Starting cross validation
2024-07-21 01:09:50,290:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-07-21 01:09:50,591:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-21 01:09:50,596:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-21 01:09:50,646:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-21 01:09:50,672:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-21 01:09:50,951:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:50,961:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:50,971:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:50,979:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:50,989:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:50,993:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:50,999:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:51,003:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:51,014:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:51,022:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:51,028:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:51,033:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:51,163:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-21 01:09:51,380:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:51,385:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:51,391:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:51,407:INFO:Calculating mean and std
2024-07-21 01:09:51,407:INFO:Creating metrics dataframe
2024-07-21 01:09:51,409:INFO:Uploading results into container
2024-07-21 01:09:51,410:INFO:Uploading model into container now
2024-07-21 01:09:51,411:INFO:_master_model_container: 9
2024-07-21 01:09:51,411:INFO:_display_container: 2
2024-07-21 01:09:51,411:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=35)
2024-07-21 01:09:51,411:INFO:create_model() successfully completed......................................
2024-07-21 01:09:51,483:INFO:SubProcess create_model() end ==================================
2024-07-21 01:09:51,484:INFO:Creating metrics dataframe
2024-07-21 01:09:51,492:INFO:Initializing Gradient Boosting Classifier
2024-07-21 01:09:51,492:INFO:Total runtime is 0.2578420559565226 minutes
2024-07-21 01:09:51,495:INFO:SubProcess create_model() called ==================================
2024-07-21 01:09:51,496:INFO:Initializing create_model()
2024-07-21 01:09:51,496:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x78995494fbb0>, estimator=gbc, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x789958a36200>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-21 01:09:51,496:INFO:Checking exceptions
2024-07-21 01:09:51,496:INFO:Importing libraries
2024-07-21 01:09:51,496:INFO:Copying training dataset
2024-07-21 01:09:51,501:INFO:Defining folds
2024-07-21 01:09:51,501:INFO:Declaring metric variables
2024-07-21 01:09:51,503:INFO:Importing untrained model
2024-07-21 01:09:51,506:INFO:Gradient Boosting Classifier Imported successfully
2024-07-21 01:09:51,512:INFO:Starting cross validation
2024-07-21 01:09:51,515:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-07-21 01:09:52,464:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:52,469:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:52,474:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:52,478:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:52,483:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:52,487:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:52,534:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:52,535:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:52,539:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:52,544:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:52,545:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:52,554:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:53,170:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:53,176:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:53,182:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:53,199:INFO:Calculating mean and std
2024-07-21 01:09:53,200:INFO:Creating metrics dataframe
2024-07-21 01:09:53,202:INFO:Uploading results into container
2024-07-21 01:09:53,203:INFO:Uploading model into container now
2024-07-21 01:09:53,203:INFO:_master_model_container: 10
2024-07-21 01:09:53,204:INFO:_display_container: 2
2024-07-21 01:09:53,204:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=35, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-07-21 01:09:53,204:INFO:create_model() successfully completed......................................
2024-07-21 01:09:53,280:INFO:SubProcess create_model() end ==================================
2024-07-21 01:09:53,281:INFO:Creating metrics dataframe
2024-07-21 01:09:53,290:INFO:Initializing Linear Discriminant Analysis
2024-07-21 01:09:53,290:INFO:Total runtime is 0.2878149112065633 minutes
2024-07-21 01:09:53,293:INFO:SubProcess create_model() called ==================================
2024-07-21 01:09:53,294:INFO:Initializing create_model()
2024-07-21 01:09:53,294:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x78995494fbb0>, estimator=lda, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x789958a36200>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-21 01:09:53,294:INFO:Checking exceptions
2024-07-21 01:09:53,294:INFO:Importing libraries
2024-07-21 01:09:53,294:INFO:Copying training dataset
2024-07-21 01:09:53,299:INFO:Defining folds
2024-07-21 01:09:53,299:INFO:Declaring metric variables
2024-07-21 01:09:53,302:INFO:Importing untrained model
2024-07-21 01:09:53,305:INFO:Linear Discriminant Analysis Imported successfully
2024-07-21 01:09:53,312:INFO:Starting cross validation
2024-07-21 01:09:53,316:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-07-21 01:09:53,722:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:53,730:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:53,732:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:53,739:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:53,742:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:53,744:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:53,749:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:53,753:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:53,762:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:53,767:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:53,777:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:53,786:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:53,999:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:54,005:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:54,010:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:54,026:INFO:Calculating mean and std
2024-07-21 01:09:54,026:INFO:Creating metrics dataframe
2024-07-21 01:09:54,029:INFO:Uploading results into container
2024-07-21 01:09:54,030:INFO:Uploading model into container now
2024-07-21 01:09:54,030:INFO:_master_model_container: 11
2024-07-21 01:09:54,030:INFO:_display_container: 2
2024-07-21 01:09:54,031:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-07-21 01:09:54,031:INFO:create_model() successfully completed......................................
2024-07-21 01:09:54,106:INFO:SubProcess create_model() end ==================================
2024-07-21 01:09:54,106:INFO:Creating metrics dataframe
2024-07-21 01:09:54,115:INFO:Initializing Extra Trees Classifier
2024-07-21 01:09:54,115:INFO:Total runtime is 0.3015655398368835 minutes
2024-07-21 01:09:54,119:INFO:SubProcess create_model() called ==================================
2024-07-21 01:09:54,119:INFO:Initializing create_model()
2024-07-21 01:09:54,119:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x78995494fbb0>, estimator=et, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x789958a36200>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-21 01:09:54,119:INFO:Checking exceptions
2024-07-21 01:09:54,119:INFO:Importing libraries
2024-07-21 01:09:54,119:INFO:Copying training dataset
2024-07-21 01:09:54,124:INFO:Defining folds
2024-07-21 01:09:54,124:INFO:Declaring metric variables
2024-07-21 01:09:54,127:INFO:Importing untrained model
2024-07-21 01:09:54,130:INFO:Extra Trees Classifier Imported successfully
2024-07-21 01:09:54,138:INFO:Starting cross validation
2024-07-21 01:09:54,142:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-07-21 01:09:54,890:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:54,896:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:54,900:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:54,906:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:54,906:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:54,914:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:54,915:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:54,916:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:54,923:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:54,926:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:54,936:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:54,944:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:55,343:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:55,348:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:55,353:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:09:55,365:INFO:Calculating mean and std
2024-07-21 01:09:55,366:INFO:Creating metrics dataframe
2024-07-21 01:09:55,368:INFO:Uploading results into container
2024-07-21 01:09:55,369:INFO:Uploading model into container now
2024-07-21 01:09:55,369:INFO:_master_model_container: 12
2024-07-21 01:09:55,370:INFO:_display_container: 2
2024-07-21 01:09:55,371:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=35, verbose=0,
                     warm_start=False)
2024-07-21 01:09:55,371:INFO:create_model() successfully completed......................................
2024-07-21 01:09:55,439:INFO:SubProcess create_model() end ==================================
2024-07-21 01:09:55,439:INFO:Creating metrics dataframe
2024-07-21 01:09:55,449:INFO:Initializing Light Gradient Boosting Machine
2024-07-21 01:09:55,449:INFO:Total runtime is 0.3237889687220255 minutes
2024-07-21 01:09:55,452:INFO:SubProcess create_model() called ==================================
2024-07-21 01:09:55,452:INFO:Initializing create_model()
2024-07-21 01:09:55,452:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x78995494fbb0>, estimator=lightgbm, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x789958a36200>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-21 01:09:55,452:INFO:Checking exceptions
2024-07-21 01:09:55,453:INFO:Importing libraries
2024-07-21 01:09:55,453:INFO:Copying training dataset
2024-07-21 01:09:55,458:INFO:Defining folds
2024-07-21 01:09:55,458:INFO:Declaring metric variables
2024-07-21 01:09:55,460:INFO:Importing untrained model
2024-07-21 01:09:55,464:INFO:Light Gradient Boosting Machine Imported successfully
2024-07-21 01:09:55,469:INFO:Starting cross validation
2024-07-21 01:09:55,472:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-07-21 01:11:19,045:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:11:19,086:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:11:19,110:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:11:22,748:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:11:22,800:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:11:22,824:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:11:29,731:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:11:29,739:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:11:29,748:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:11:29,773:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:11:29,781:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:11:29,788:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:11:29,901:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:11:29,907:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:11:29,913:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:11:29,925:INFO:Calculating mean and std
2024-07-21 01:11:29,926:INFO:Creating metrics dataframe
2024-07-21 01:11:29,928:INFO:Uploading results into container
2024-07-21 01:11:29,929:INFO:Uploading model into container now
2024-07-21 01:11:29,930:INFO:_master_model_container: 13
2024-07-21 01:11:29,930:INFO:_display_container: 2
2024-07-21 01:11:29,930:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=35, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-07-21 01:11:29,931:INFO:create_model() successfully completed......................................
2024-07-21 01:11:29,998:INFO:SubProcess create_model() end ==================================
2024-07-21 01:11:29,999:INFO:Creating metrics dataframe
2024-07-21 01:11:30,008:INFO:Initializing Dummy Classifier
2024-07-21 01:11:30,008:INFO:Total runtime is 1.8997759024302163 minutes
2024-07-21 01:11:30,011:INFO:SubProcess create_model() called ==================================
2024-07-21 01:11:30,012:INFO:Initializing create_model()
2024-07-21 01:11:30,012:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x78995494fbb0>, estimator=dummy, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x789958a36200>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-21 01:11:30,012:INFO:Checking exceptions
2024-07-21 01:11:30,012:INFO:Importing libraries
2024-07-21 01:11:30,012:INFO:Copying training dataset
2024-07-21 01:11:30,017:INFO:Defining folds
2024-07-21 01:11:30,017:INFO:Declaring metric variables
2024-07-21 01:11:30,020:INFO:Importing untrained model
2024-07-21 01:11:30,023:INFO:Dummy Classifier Imported successfully
2024-07-21 01:11:30,028:INFO:Starting cross validation
2024-07-21 01:11:30,031:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-07-21 01:11:30,426:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:11:30,435:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:11:30,441:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-21 01:11:30,445:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:11:30,452:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:11:30,453:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:11:30,456:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:11:30,461:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:11:30,463:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:11:30,465:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:11:30,466:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-21 01:11:30,468:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-21 01:11:30,470:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:11:30,470:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-21 01:11:30,472:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:11:30,475:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:11:30,690:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:11:30,696:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:11:30,698:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-21 01:11:30,701:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:11:30,715:INFO:Calculating mean and std
2024-07-21 01:11:30,716:INFO:Creating metrics dataframe
2024-07-21 01:11:30,718:INFO:Uploading results into container
2024-07-21 01:11:30,719:INFO:Uploading model into container now
2024-07-21 01:11:30,719:INFO:_master_model_container: 14
2024-07-21 01:11:30,719:INFO:_display_container: 2
2024-07-21 01:11:30,720:INFO:DummyClassifier(constant=None, random_state=35, strategy='prior')
2024-07-21 01:11:30,720:INFO:create_model() successfully completed......................................
2024-07-21 01:11:30,785:INFO:SubProcess create_model() end ==================================
2024-07-21 01:11:30,785:INFO:Creating metrics dataframe
2024-07-21 01:11:30,796:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2024-07-21 01:11:30,803:INFO:Initializing create_model()
2024-07-21 01:11:30,803:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x78995494fbb0>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=35, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-21 01:11:30,803:INFO:Checking exceptions
2024-07-21 01:11:30,804:INFO:Importing libraries
2024-07-21 01:11:30,804:INFO:Copying training dataset
2024-07-21 01:11:30,809:INFO:Defining folds
2024-07-21 01:11:30,809:INFO:Declaring metric variables
2024-07-21 01:11:30,810:INFO:Importing untrained model
2024-07-21 01:11:30,810:INFO:Declaring custom model
2024-07-21 01:11:30,810:INFO:SVM - Linear Kernel Imported successfully
2024-07-21 01:11:30,813:INFO:Cross validation set to False
2024-07-21 01:11:30,813:INFO:Fitting Model
2024-07-21 01:11:31,016:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=35, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-07-21 01:11:31,016:INFO:create_model() successfully completed......................................
2024-07-21 01:11:31,091:INFO:Initializing create_model()
2024-07-21 01:11:31,091:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x78995494fbb0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=35, verbose=0,
                       warm_start=False), fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-21 01:11:31,091:INFO:Checking exceptions
2024-07-21 01:11:31,093:INFO:Importing libraries
2024-07-21 01:11:31,093:INFO:Copying training dataset
2024-07-21 01:11:31,097:INFO:Defining folds
2024-07-21 01:11:31,097:INFO:Declaring metric variables
2024-07-21 01:11:31,098:INFO:Importing untrained model
2024-07-21 01:11:31,098:INFO:Declaring custom model
2024-07-21 01:11:31,098:INFO:Random Forest Classifier Imported successfully
2024-07-21 01:11:31,101:INFO:Cross validation set to False
2024-07-21 01:11:31,101:INFO:Fitting Model
2024-07-21 01:11:31,436:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=35, verbose=0,
                       warm_start=False)
2024-07-21 01:11:31,436:INFO:create_model() successfully completed......................................
2024-07-21 01:11:31,512:INFO:Initializing create_model()
2024-07-21 01:11:31,512:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x78995494fbb0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-21 01:11:31,512:INFO:Checking exceptions
2024-07-21 01:11:31,513:INFO:Importing libraries
2024-07-21 01:11:31,513:INFO:Copying training dataset
2024-07-21 01:11:31,518:INFO:Defining folds
2024-07-21 01:11:31,518:INFO:Declaring metric variables
2024-07-21 01:11:31,518:INFO:Importing untrained model
2024-07-21 01:11:31,518:INFO:Declaring custom model
2024-07-21 01:11:31,519:INFO:K Neighbors Classifier Imported successfully
2024-07-21 01:11:31,521:INFO:Cross validation set to False
2024-07-21 01:11:31,521:INFO:Fitting Model
2024-07-21 01:11:31,676:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-07-21 01:11:31,677:INFO:create_model() successfully completed......................................
2024-07-21 01:11:31,750:INFO:Initializing create_model()
2024-07-21 01:11:31,750:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x78995494fbb0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=35, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-21 01:11:31,750:INFO:Checking exceptions
2024-07-21 01:11:31,751:INFO:Importing libraries
2024-07-21 01:11:31,752:INFO:Copying training dataset
2024-07-21 01:11:31,756:INFO:Defining folds
2024-07-21 01:11:31,756:INFO:Declaring metric variables
2024-07-21 01:11:31,756:INFO:Importing untrained model
2024-07-21 01:11:31,756:INFO:Declaring custom model
2024-07-21 01:11:31,757:INFO:Logistic Regression Imported successfully
2024-07-21 01:11:31,759:INFO:Cross validation set to False
2024-07-21 01:11:31,759:INFO:Fitting Model
2024-07-21 01:11:32,222:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-21 01:11:32,223:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=35, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-07-21 01:11:32,223:INFO:create_model() successfully completed......................................
2024-07-21 01:11:32,336:INFO:Initializing create_model()
2024-07-21 01:11:32,336:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x78995494fbb0>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-21 01:11:32,336:INFO:Checking exceptions
2024-07-21 01:11:32,338:INFO:Importing libraries
2024-07-21 01:11:32,338:INFO:Copying training dataset
2024-07-21 01:11:32,343:INFO:Defining folds
2024-07-21 01:11:32,343:INFO:Declaring metric variables
2024-07-21 01:11:32,343:INFO:Importing untrained model
2024-07-21 01:11:32,344:INFO:Declaring custom model
2024-07-21 01:11:32,344:INFO:Naive Bayes Imported successfully
2024-07-21 01:11:32,347:INFO:Cross validation set to False
2024-07-21 01:11:32,347:INFO:Fitting Model
2024-07-21 01:11:32,510:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-07-21 01:11:32,511:INFO:create_model() successfully completed......................................
2024-07-21 01:11:32,583:INFO:Initializing create_model()
2024-07-21 01:11:32,584:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x78995494fbb0>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-21 01:11:32,584:INFO:Checking exceptions
2024-07-21 01:11:32,585:INFO:Importing libraries
2024-07-21 01:11:32,585:INFO:Copying training dataset
2024-07-21 01:11:32,590:INFO:Defining folds
2024-07-21 01:11:32,590:INFO:Declaring metric variables
2024-07-21 01:11:32,590:INFO:Importing untrained model
2024-07-21 01:11:32,590:INFO:Declaring custom model
2024-07-21 01:11:32,591:INFO:Quadratic Discriminant Analysis Imported successfully
2024-07-21 01:11:32,593:INFO:Cross validation set to False
2024-07-21 01:11:32,593:INFO:Fitting Model
2024-07-21 01:11:32,768:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-21 01:11:32,770:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-07-21 01:11:32,770:INFO:create_model() successfully completed......................................
2024-07-21 01:11:32,864:INFO:Initializing create_model()
2024-07-21 01:11:32,864:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x78995494fbb0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=35, verbose=0,
                     warm_start=False), fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-21 01:11:32,865:INFO:Checking exceptions
2024-07-21 01:11:32,867:INFO:Importing libraries
2024-07-21 01:11:32,867:INFO:Copying training dataset
2024-07-21 01:11:32,875:INFO:Defining folds
2024-07-21 01:11:32,875:INFO:Declaring metric variables
2024-07-21 01:11:32,876:INFO:Importing untrained model
2024-07-21 01:11:32,876:INFO:Declaring custom model
2024-07-21 01:11:32,877:INFO:Extra Trees Classifier Imported successfully
2024-07-21 01:11:32,880:INFO:Cross validation set to False
2024-07-21 01:11:32,880:INFO:Fitting Model
2024-07-21 01:11:33,180:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=35, verbose=0,
                     warm_start=False)
2024-07-21 01:11:33,180:INFO:create_model() successfully completed......................................
2024-07-21 01:11:33,254:INFO:Initializing create_model()
2024-07-21 01:11:33,254:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x78995494fbb0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=35, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-21 01:11:33,254:INFO:Checking exceptions
2024-07-21 01:11:33,256:INFO:Importing libraries
2024-07-21 01:11:33,256:INFO:Copying training dataset
2024-07-21 01:11:33,260:INFO:Defining folds
2024-07-21 01:11:33,260:INFO:Declaring metric variables
2024-07-21 01:11:33,261:INFO:Importing untrained model
2024-07-21 01:11:33,261:INFO:Declaring custom model
2024-07-21 01:11:33,261:INFO:Light Gradient Boosting Machine Imported successfully
2024-07-21 01:11:33,264:INFO:Cross validation set to False
2024-07-21 01:11:33,264:INFO:Fitting Model
2024-07-21 01:11:33,425:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2024-07-21 01:11:33,426:INFO:[LightGBM] [Info] Number of positive: 927, number of negative: 2524
2024-07-21 01:11:33,426:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000198 seconds.
2024-07-21 01:11:33,427:INFO:You can set `force_row_wise=true` to remove the overhead.
2024-07-21 01:11:33,427:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2024-07-21 01:11:33,427:INFO:[LightGBM] [Info] Total Bins 418
2024-07-21 01:11:33,427:INFO:[LightGBM] [Info] Number of data points in the train set: 3451, number of used features: 40
2024-07-21 01:11:33,428:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.268618 -> initscore=-1.001647
2024-07-21 01:11:33,428:INFO:[LightGBM] [Info] Start training from score -1.001647
2024-07-21 01:11:33,428:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:11:33,429:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:11:33,429:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:11:33,430:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:11:33,430:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:11:33,431:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:11:33,431:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:11:33,432:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:11:33,432:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:11:33,433:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:11:33,433:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:11:33,434:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:11:33,434:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:11:33,435:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:11:33,435:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:11:33,435:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:11:33,436:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:11:33,436:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:11:33,437:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:11:33,437:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:11:33,438:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:11:33,438:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:11:33,439:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:11:33,439:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:11:33,440:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:11:33,440:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:11:33,441:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:11:33,441:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:11:33,442:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:11:33,442:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:11:33,443:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:11:33,443:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:11:33,444:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:11:33,444:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:11:33,444:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:11:33,445:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:11:33,445:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:11:33,446:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:11:33,446:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:11:33,447:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:11:33,447:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:11:33,448:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:11:33,448:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:11:33,448:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:11:33,449:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:11:33,449:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:11:33,450:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:11:33,450:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:11:33,479:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=35, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-07-21 01:11:33,480:INFO:create_model() successfully completed......................................
2024-07-21 01:11:33,560:INFO:Initializing create_model()
2024-07-21 01:11:33,561:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x78995494fbb0>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-21 01:11:33,561:INFO:Checking exceptions
2024-07-21 01:11:33,563:INFO:Importing libraries
2024-07-21 01:11:33,563:INFO:Copying training dataset
2024-07-21 01:11:33,568:INFO:Defining folds
2024-07-21 01:11:33,568:INFO:Declaring metric variables
2024-07-21 01:11:33,568:INFO:Importing untrained model
2024-07-21 01:11:33,569:INFO:Declaring custom model
2024-07-21 01:11:33,569:INFO:Linear Discriminant Analysis Imported successfully
2024-07-21 01:11:33,573:INFO:Cross validation set to False
2024-07-21 01:11:33,573:INFO:Fitting Model
2024-07-21 01:11:33,755:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-07-21 01:11:33,755:INFO:create_model() successfully completed......................................
2024-07-21 01:11:33,846:INFO:Initializing create_model()
2024-07-21 01:11:33,847:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x78995494fbb0>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=35, solver='auto',
                tol=0.0001), fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-21 01:11:33,847:INFO:Checking exceptions
2024-07-21 01:11:33,849:INFO:Importing libraries
2024-07-21 01:11:33,849:INFO:Copying training dataset
2024-07-21 01:11:33,855:INFO:Defining folds
2024-07-21 01:11:33,855:INFO:Declaring metric variables
2024-07-21 01:11:33,856:INFO:Importing untrained model
2024-07-21 01:11:33,856:INFO:Declaring custom model
2024-07-21 01:11:33,856:INFO:Ridge Classifier Imported successfully
2024-07-21 01:11:33,860:INFO:Cross validation set to False
2024-07-21 01:11:33,860:INFO:Fitting Model
2024-07-21 01:11:34,031:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=35, solver='auto',
                tol=0.0001)
2024-07-21 01:11:34,031:INFO:create_model() successfully completed......................................
2024-07-21 01:11:34,148:INFO:_master_model_container: 14
2024-07-21 01:11:34,148:INFO:_display_container: 2
2024-07-21 01:11:34,151:INFO:[SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=35, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=35, verbose=0,
                       warm_start=False), KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=35, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), GaussianNB(priors=None, var_smoothing=1e-09), QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=35, verbose=0,
                     warm_start=False), LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=35, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=35, solver='auto',
                tol=0.0001)]
2024-07-21 01:11:34,151:INFO:compare_models() successfully completed......................................
2024-07-21 01:22:09,496:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-21 01:22:09,497:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-21 01:22:09,497:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-21 01:22:09,497:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-21 01:22:32,929:INFO:PyCaret ClassificationExperiment
2024-07-21 01:22:32,929:INFO:Logging name: clf-default-name
2024-07-21 01:22:32,930:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-21 01:22:32,930:INFO:version 3.3.2
2024-07-21 01:22:32,930:INFO:Initializing setup()
2024-07-21 01:22:32,930:INFO:self.USI: df88
2024-07-21 01:22:32,930:INFO:self._variable_keys: {'X_train', 'X_test', 'n_jobs_param', 'y_train', 'fix_imbalance', 'logging_param', 'pipeline', 'gpu_param', '_ml_usecase', 'target_param', 'fold_generator', 'exp_name_log', 'fold_shuffle_param', 'USI', 'fold_groups_param', 'y', 'gpu_n_jobs_param', 'memory', 'idx', 'exp_id', 'X', '_available_plots', 'seed', 'y_test', 'html_param', 'log_plots_param', 'is_multiclass', 'data'}
2024-07-21 01:22:32,930:INFO:Checking environment
2024-07-21 01:22:32,930:INFO:python_version: 3.10.13
2024-07-21 01:22:32,930:INFO:python_build: ('main', 'Jul 11 2024 16:23:02')
2024-07-21 01:22:32,930:INFO:machine: x86_64
2024-07-21 01:22:32,930:INFO:platform: Linux-6.5.0-1022-azure-x86_64-with-glibc2.31
2024-07-21 01:22:32,931:INFO:Memory: svmem(total=16757342208, available=11952803840, percent=28.7, used=4372107264, free=989192192, active=5212172288, inactive=9531609088, buffers=238657536, cached=11157385216, shared=69222400, slab=799367168)
2024-07-21 01:22:32,931:INFO:Physical Core: 2
2024-07-21 01:22:32,932:INFO:Logical Core: 4
2024-07-21 01:22:32,932:INFO:Checking libraries
2024-07-21 01:22:32,932:INFO:System:
2024-07-21 01:22:32,932:INFO:    python: 3.10.13 (main, Jul 11 2024, 16:23:02) [GCC 9.4.0]
2024-07-21 01:22:32,932:INFO:executable: /home/codespace/.python/current/bin/python
2024-07-21 01:22:32,932:INFO:   machine: Linux-6.5.0-1022-azure-x86_64-with-glibc2.31
2024-07-21 01:22:32,932:INFO:PyCaret required dependencies:
2024-07-21 01:22:32,957:INFO:                 pip: 24.1.2
2024-07-21 01:22:32,957:INFO:          setuptools: 68.2.2
2024-07-21 01:22:32,958:INFO:             pycaret: 3.3.2
2024-07-21 01:22:32,958:INFO:             IPython: 8.26.0
2024-07-21 01:22:32,958:INFO:          ipywidgets: 8.1.3
2024-07-21 01:22:32,958:INFO:                tqdm: 4.66.4
2024-07-21 01:22:32,958:INFO:               numpy: 1.26.4
2024-07-21 01:22:32,959:INFO:              pandas: 2.1.4
2024-07-21 01:22:32,959:INFO:              jinja2: 3.1.4
2024-07-21 01:22:32,959:INFO:               scipy: 1.11.4
2024-07-21 01:22:32,959:INFO:              joblib: 1.3.2
2024-07-21 01:22:32,959:INFO:             sklearn: 1.4.2
2024-07-21 01:22:32,960:INFO:                pyod: 2.0.1
2024-07-21 01:22:32,960:INFO:            imblearn: 0.12.3
2024-07-21 01:22:32,960:INFO:   category_encoders: 2.6.3
2024-07-21 01:22:32,960:INFO:            lightgbm: 4.4.0
2024-07-21 01:22:32,960:INFO:               numba: 0.60.0
2024-07-21 01:22:32,960:INFO:            requests: 2.32.3
2024-07-21 01:22:32,960:INFO:          matplotlib: 3.7.5
2024-07-21 01:22:32,960:INFO:          scikitplot: 0.3.7
2024-07-21 01:22:32,960:INFO:         yellowbrick: 1.5
2024-07-21 01:22:32,960:INFO:              plotly: 5.22.0
2024-07-21 01:22:32,960:INFO:    plotly-resampler: Not installed
2024-07-21 01:22:32,960:INFO:             kaleido: 0.2.1
2024-07-21 01:22:32,960:INFO:           schemdraw: 0.15
2024-07-21 01:22:32,960:INFO:         statsmodels: 0.14.2
2024-07-21 01:22:32,960:INFO:              sktime: 0.26.0
2024-07-21 01:22:32,961:INFO:               tbats: 1.1.3
2024-07-21 01:22:32,961:INFO:            pmdarima: 2.0.4
2024-07-21 01:22:32,961:INFO:              psutil: 6.0.0
2024-07-21 01:22:32,961:INFO:          markupsafe: 2.1.5
2024-07-21 01:22:32,961:INFO:             pickle5: Not installed
2024-07-21 01:22:32,961:INFO:         cloudpickle: 3.0.0
2024-07-21 01:22:32,961:INFO:         deprecation: 2.1.0
2024-07-21 01:22:32,961:INFO:              xxhash: 3.4.1
2024-07-21 01:22:32,961:INFO:           wurlitzer: 3.1.1
2024-07-21 01:22:32,961:INFO:PyCaret optional dependencies:
2024-07-21 01:22:32,977:INFO:                shap: Not installed
2024-07-21 01:22:32,977:INFO:           interpret: Not installed
2024-07-21 01:22:32,977:INFO:                umap: Not installed
2024-07-21 01:22:32,977:INFO:     ydata_profiling: Not installed
2024-07-21 01:22:32,977:INFO:  explainerdashboard: Not installed
2024-07-21 01:22:32,977:INFO:             autoviz: Not installed
2024-07-21 01:22:32,977:INFO:           fairlearn: Not installed
2024-07-21 01:22:32,977:INFO:          deepchecks: Not installed
2024-07-21 01:22:32,977:INFO:             xgboost: Not installed
2024-07-21 01:22:32,977:INFO:            catboost: Not installed
2024-07-21 01:22:32,977:INFO:              kmodes: Not installed
2024-07-21 01:22:32,977:INFO:             mlxtend: Not installed
2024-07-21 01:22:32,977:INFO:       statsforecast: Not installed
2024-07-21 01:22:32,977:INFO:        tune_sklearn: Not installed
2024-07-21 01:22:32,978:INFO:                 ray: Not installed
2024-07-21 01:22:32,978:INFO:            hyperopt: Not installed
2024-07-21 01:22:32,978:INFO:              optuna: Not installed
2024-07-21 01:22:32,978:INFO:               skopt: Not installed
2024-07-21 01:22:32,978:INFO:              mlflow: Not installed
2024-07-21 01:22:32,978:INFO:              gradio: Not installed
2024-07-21 01:22:32,978:INFO:             fastapi: Not installed
2024-07-21 01:22:32,978:INFO:             uvicorn: Not installed
2024-07-21 01:22:32,978:INFO:              m2cgen: Not installed
2024-07-21 01:22:32,978:INFO:           evidently: Not installed
2024-07-21 01:22:32,978:INFO:               fugue: Not installed
2024-07-21 01:22:32,978:INFO:           streamlit: Not installed
2024-07-21 01:22:32,978:INFO:             prophet: Not installed
2024-07-21 01:22:32,978:INFO:None
2024-07-21 01:22:32,979:INFO:Set up data.
2024-07-21 01:22:33,000:INFO:Set up folding strategy.
2024-07-21 01:22:33,000:INFO:Set up train/test split.
2024-07-21 01:22:33,017:INFO:Set up index.
2024-07-21 01:22:33,018:INFO:Assigning column types.
2024-07-21 01:22:33,023:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-21 01:22:33,068:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-21 01:22:33,070:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-21 01:22:33,101:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-21 01:22:33,102:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-21 01:22:33,141:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-21 01:22:33,142:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-21 01:22:33,166:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-21 01:22:33,166:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-21 01:22:33,167:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-21 01:22:33,208:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-21 01:22:33,232:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-21 01:22:33,232:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-21 01:22:33,272:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-21 01:22:33,298:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-21 01:22:33,298:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-21 01:22:33,298:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-07-21 01:22:33,362:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-21 01:22:33,363:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-21 01:22:33,427:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-21 01:22:33,427:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-21 01:22:33,429:INFO:Preparing preprocessing pipeline...
2024-07-21 01:22:33,430:INFO:Set up label encoding.
2024-07-21 01:22:33,430:INFO:Set up simple imputation.
2024-07-21 01:22:33,436:INFO:Set up encoding of ordinal features.
2024-07-21 01:22:33,442:INFO:Set up encoding of categorical features.
2024-07-21 01:22:33,835:INFO:Finished creating preprocessing pipeline.
2024-07-21 01:22:33,881:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SeniorCitizen', 'tenure',
                                             'MonthlyCharges'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_fea...
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['TotalCharges'],
                                    transformer=TargetEncoder(cols=['TotalCharges'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2024-07-21 01:22:33,881:INFO:Creating final display dataframe.
2024-07-21 01:22:34,501:INFO:Setup _display_container:                     Description             Value
0                    Session id                35
1                        Target             Churn
2                   Target type            Binary
3                Target mapping     No: 0, Yes: 1
4           Original data shape        (4930, 20)
5        Transformed data shape        (4930, 41)
6   Transformed train set shape        (3451, 41)
7    Transformed test set shape        (1479, 41)
8              Numeric features                 3
9          Categorical features                16
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator             KFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  clf-default-name
22                          USI              df88
2024-07-21 01:22:34,572:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-21 01:22:34,573:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-21 01:22:34,637:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-21 01:22:34,637:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-21 01:22:34,638:INFO:setup() successfully completed in 1.71s...............
2024-07-21 01:22:40,867:INFO:Initializing compare_models()
2024-07-21 01:22:40,867:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7490401eb6a0>, include=None, fold=5, round=4, cross_validation=True, sort=Accuracy, n_select=10, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x7490401eb6a0>, 'include': None, 'exclude': None, 'fold': 5, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 10, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-07-21 01:22:40,868:INFO:Checking exceptions
2024-07-21 01:22:40,872:INFO:Preparing display monitor
2024-07-21 01:22:40,896:INFO:Initializing Logistic Regression
2024-07-21 01:22:40,896:INFO:Total runtime is 3.401438395182292e-06 minutes
2024-07-21 01:22:40,899:INFO:SubProcess create_model() called ==================================
2024-07-21 01:22:40,900:INFO:Initializing create_model()
2024-07-21 01:22:40,900:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7490401eb6a0>, estimator=lr, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x74900eeab610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-21 01:22:40,900:INFO:Checking exceptions
2024-07-21 01:22:40,900:INFO:Importing libraries
2024-07-21 01:22:40,900:INFO:Copying training dataset
2024-07-21 01:22:40,906:INFO:Defining folds
2024-07-21 01:22:40,906:INFO:Declaring metric variables
2024-07-21 01:22:40,908:INFO:Importing untrained model
2024-07-21 01:22:40,912:INFO:Logistic Regression Imported successfully
2024-07-21 01:22:40,918:INFO:Starting cross validation
2024-07-21 01:22:40,922:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-07-21 01:22:43,982:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:43,993:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:44,002:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:44,042:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:44,053:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:44,063:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:44,174:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:44,180:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:44,185:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:44,242:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:44,252:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:44,261:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:44,591:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:44,601:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:44,610:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:44,628:INFO:Calculating mean and std
2024-07-21 01:22:44,630:INFO:Creating metrics dataframe
2024-07-21 01:22:44,632:INFO:Uploading results into container
2024-07-21 01:22:44,633:INFO:Uploading model into container now
2024-07-21 01:22:44,634:INFO:_master_model_container: 1
2024-07-21 01:22:44,634:INFO:_display_container: 2
2024-07-21 01:22:44,635:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=35, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-07-21 01:22:44,635:INFO:create_model() successfully completed......................................
2024-07-21 01:22:44,724:INFO:SubProcess create_model() end ==================================
2024-07-21 01:22:44,724:INFO:Creating metrics dataframe
2024-07-21 01:22:44,731:INFO:Initializing K Neighbors Classifier
2024-07-21 01:22:44,732:INFO:Total runtime is 0.06392602920532227 minutes
2024-07-21 01:22:44,736:INFO:SubProcess create_model() called ==================================
2024-07-21 01:22:44,737:INFO:Initializing create_model()
2024-07-21 01:22:44,737:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7490401eb6a0>, estimator=knn, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x74900eeab610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-21 01:22:44,737:INFO:Checking exceptions
2024-07-21 01:22:44,737:INFO:Importing libraries
2024-07-21 01:22:44,737:INFO:Copying training dataset
2024-07-21 01:22:44,748:INFO:Defining folds
2024-07-21 01:22:44,748:INFO:Declaring metric variables
2024-07-21 01:22:44,753:INFO:Importing untrained model
2024-07-21 01:22:44,757:INFO:K Neighbors Classifier Imported successfully
2024-07-21 01:22:44,764:INFO:Starting cross validation
2024-07-21 01:22:44,768:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-07-21 01:22:45,281:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:45,290:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:45,292:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:45,299:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:45,300:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:45,302:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:45,303:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:45,309:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:45,311:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:45,312:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:45,319:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:45,321:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:45,596:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:45,602:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:45,607:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:45,616:INFO:Calculating mean and std
2024-07-21 01:22:45,618:INFO:Creating metrics dataframe
2024-07-21 01:22:45,620:INFO:Uploading results into container
2024-07-21 01:22:45,622:INFO:Uploading model into container now
2024-07-21 01:22:45,622:INFO:_master_model_container: 2
2024-07-21 01:22:45,622:INFO:_display_container: 2
2024-07-21 01:22:45,623:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-07-21 01:22:45,623:INFO:create_model() successfully completed......................................
2024-07-21 01:22:45,702:INFO:SubProcess create_model() end ==================================
2024-07-21 01:22:45,702:INFO:Creating metrics dataframe
2024-07-21 01:22:45,709:INFO:Initializing Naive Bayes
2024-07-21 01:22:45,709:INFO:Total runtime is 0.08022348880767823 minutes
2024-07-21 01:22:45,713:INFO:SubProcess create_model() called ==================================
2024-07-21 01:22:45,713:INFO:Initializing create_model()
2024-07-21 01:22:45,713:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7490401eb6a0>, estimator=nb, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x74900eeab610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-21 01:22:45,713:INFO:Checking exceptions
2024-07-21 01:22:45,713:INFO:Importing libraries
2024-07-21 01:22:45,713:INFO:Copying training dataset
2024-07-21 01:22:45,720:INFO:Defining folds
2024-07-21 01:22:45,720:INFO:Declaring metric variables
2024-07-21 01:22:45,724:INFO:Importing untrained model
2024-07-21 01:22:45,727:INFO:Naive Bayes Imported successfully
2024-07-21 01:22:45,734:INFO:Starting cross validation
2024-07-21 01:22:45,737:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-07-21 01:22:46,144:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:46,146:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:46,153:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:46,156:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:46,162:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:46,165:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:46,165:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:46,175:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:46,183:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:46,184:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:46,192:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:46,200:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:46,401:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:46,407:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:46,412:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:46,428:INFO:Calculating mean and std
2024-07-21 01:22:46,430:INFO:Creating metrics dataframe
2024-07-21 01:22:46,432:INFO:Uploading results into container
2024-07-21 01:22:46,432:INFO:Uploading model into container now
2024-07-21 01:22:46,433:INFO:_master_model_container: 3
2024-07-21 01:22:46,433:INFO:_display_container: 2
2024-07-21 01:22:46,433:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-07-21 01:22:46,433:INFO:create_model() successfully completed......................................
2024-07-21 01:22:46,503:INFO:SubProcess create_model() end ==================================
2024-07-21 01:22:46,503:INFO:Creating metrics dataframe
2024-07-21 01:22:46,510:INFO:Initializing Decision Tree Classifier
2024-07-21 01:22:46,510:INFO:Total runtime is 0.09356945355733236 minutes
2024-07-21 01:22:46,513:INFO:SubProcess create_model() called ==================================
2024-07-21 01:22:46,513:INFO:Initializing create_model()
2024-07-21 01:22:46,514:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7490401eb6a0>, estimator=dt, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x74900eeab610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-21 01:22:46,514:INFO:Checking exceptions
2024-07-21 01:22:46,514:INFO:Importing libraries
2024-07-21 01:22:46,514:INFO:Copying training dataset
2024-07-21 01:22:46,519:INFO:Defining folds
2024-07-21 01:22:46,519:INFO:Declaring metric variables
2024-07-21 01:22:46,522:INFO:Importing untrained model
2024-07-21 01:22:46,525:INFO:Decision Tree Classifier Imported successfully
2024-07-21 01:22:46,531:INFO:Starting cross validation
2024-07-21 01:22:46,534:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-07-21 01:22:46,940:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:46,949:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:46,955:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:46,958:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:46,964:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:46,967:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:46,973:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:46,977:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:46,987:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:46,991:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:47,000:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:47,006:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:47,201:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:47,206:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:47,212:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:47,229:INFO:Calculating mean and std
2024-07-21 01:22:47,230:INFO:Creating metrics dataframe
2024-07-21 01:22:47,232:INFO:Uploading results into container
2024-07-21 01:22:47,233:INFO:Uploading model into container now
2024-07-21 01:22:47,234:INFO:_master_model_container: 4
2024-07-21 01:22:47,234:INFO:_display_container: 2
2024-07-21 01:22:47,234:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=35, splitter='best')
2024-07-21 01:22:47,234:INFO:create_model() successfully completed......................................
2024-07-21 01:22:47,310:INFO:SubProcess create_model() end ==================================
2024-07-21 01:22:47,310:INFO:Creating metrics dataframe
2024-07-21 01:22:47,318:INFO:Initializing SVM - Linear Kernel
2024-07-21 01:22:47,318:INFO:Total runtime is 0.10703728596369426 minutes
2024-07-21 01:22:47,322:INFO:SubProcess create_model() called ==================================
2024-07-21 01:22:47,322:INFO:Initializing create_model()
2024-07-21 01:22:47,322:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7490401eb6a0>, estimator=svm, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x74900eeab610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-21 01:22:47,323:INFO:Checking exceptions
2024-07-21 01:22:47,323:INFO:Importing libraries
2024-07-21 01:22:47,323:INFO:Copying training dataset
2024-07-21 01:22:47,328:INFO:Defining folds
2024-07-21 01:22:47,328:INFO:Declaring metric variables
2024-07-21 01:22:47,331:INFO:Importing untrained model
2024-07-21 01:22:47,335:INFO:SVM - Linear Kernel Imported successfully
2024-07-21 01:22:47,342:INFO:Starting cross validation
2024-07-21 01:22:47,345:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-07-21 01:22:47,791:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:47,801:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:47,802:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:47,811:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:47,813:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:47,814:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:47,821:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:47,824:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:47,834:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:47,837:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:47,848:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:47,858:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:48,096:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:48,101:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:48,107:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:48,117:INFO:Calculating mean and std
2024-07-21 01:22:48,117:INFO:Creating metrics dataframe
2024-07-21 01:22:48,120:INFO:Uploading results into container
2024-07-21 01:22:48,120:INFO:Uploading model into container now
2024-07-21 01:22:48,121:INFO:_master_model_container: 5
2024-07-21 01:22:48,121:INFO:_display_container: 2
2024-07-21 01:22:48,122:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=35, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-07-21 01:22:48,122:INFO:create_model() successfully completed......................................
2024-07-21 01:22:48,195:INFO:SubProcess create_model() end ==================================
2024-07-21 01:22:48,195:INFO:Creating metrics dataframe
2024-07-21 01:22:48,202:INFO:Initializing Ridge Classifier
2024-07-21 01:22:48,203:INFO:Total runtime is 0.12177778879801433 minutes
2024-07-21 01:22:48,206:INFO:SubProcess create_model() called ==================================
2024-07-21 01:22:48,206:INFO:Initializing create_model()
2024-07-21 01:22:48,206:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7490401eb6a0>, estimator=ridge, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x74900eeab610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-21 01:22:48,206:INFO:Checking exceptions
2024-07-21 01:22:48,206:INFO:Importing libraries
2024-07-21 01:22:48,207:INFO:Copying training dataset
2024-07-21 01:22:48,212:INFO:Defining folds
2024-07-21 01:22:48,212:INFO:Declaring metric variables
2024-07-21 01:22:48,215:INFO:Importing untrained model
2024-07-21 01:22:48,218:INFO:Ridge Classifier Imported successfully
2024-07-21 01:22:48,227:INFO:Starting cross validation
2024-07-21 01:22:48,232:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-07-21 01:22:48,641:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:48,651:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:48,654:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:48,662:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:48,662:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:48,664:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:48,671:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:48,673:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:48,674:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:48,680:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:48,684:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:48,693:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:48,906:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:48,911:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:48,917:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:48,935:INFO:Calculating mean and std
2024-07-21 01:22:48,937:INFO:Creating metrics dataframe
2024-07-21 01:22:48,940:INFO:Uploading results into container
2024-07-21 01:22:48,941:INFO:Uploading model into container now
2024-07-21 01:22:48,941:INFO:_master_model_container: 6
2024-07-21 01:22:48,941:INFO:_display_container: 2
2024-07-21 01:22:48,942:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=35, solver='auto',
                tol=0.0001)
2024-07-21 01:22:48,942:INFO:create_model() successfully completed......................................
2024-07-21 01:22:49,018:INFO:SubProcess create_model() end ==================================
2024-07-21 01:22:49,018:INFO:Creating metrics dataframe
2024-07-21 01:22:49,026:INFO:Initializing Random Forest Classifier
2024-07-21 01:22:49,026:INFO:Total runtime is 0.13550061384836834 minutes
2024-07-21 01:22:49,029:INFO:SubProcess create_model() called ==================================
2024-07-21 01:22:49,030:INFO:Initializing create_model()
2024-07-21 01:22:49,030:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7490401eb6a0>, estimator=rf, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x74900eeab610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-21 01:22:49,030:INFO:Checking exceptions
2024-07-21 01:22:49,030:INFO:Importing libraries
2024-07-21 01:22:49,030:INFO:Copying training dataset
2024-07-21 01:22:49,035:INFO:Defining folds
2024-07-21 01:22:49,035:INFO:Declaring metric variables
2024-07-21 01:22:49,038:INFO:Importing untrained model
2024-07-21 01:22:49,042:INFO:Random Forest Classifier Imported successfully
2024-07-21 01:22:49,049:INFO:Starting cross validation
2024-07-21 01:22:49,052:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-07-21 01:22:49,850:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:49,860:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:49,869:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:49,877:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:49,886:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:49,886:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:49,888:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:49,896:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:49,896:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:49,897:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:49,906:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:49,906:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:50,345:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:50,351:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:50,356:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:50,372:INFO:Calculating mean and std
2024-07-21 01:22:50,372:INFO:Creating metrics dataframe
2024-07-21 01:22:50,375:INFO:Uploading results into container
2024-07-21 01:22:50,376:INFO:Uploading model into container now
2024-07-21 01:22:50,376:INFO:_master_model_container: 7
2024-07-21 01:22:50,376:INFO:_display_container: 2
2024-07-21 01:22:50,377:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=35, verbose=0,
                       warm_start=False)
2024-07-21 01:22:50,377:INFO:create_model() successfully completed......................................
2024-07-21 01:22:50,447:INFO:SubProcess create_model() end ==================================
2024-07-21 01:22:50,448:INFO:Creating metrics dataframe
2024-07-21 01:22:50,456:INFO:Initializing Quadratic Discriminant Analysis
2024-07-21 01:22:50,456:INFO:Total runtime is 0.15933082501093548 minutes
2024-07-21 01:22:50,460:INFO:SubProcess create_model() called ==================================
2024-07-21 01:22:50,460:INFO:Initializing create_model()
2024-07-21 01:22:50,460:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7490401eb6a0>, estimator=qda, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x74900eeab610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-21 01:22:50,460:INFO:Checking exceptions
2024-07-21 01:22:50,460:INFO:Importing libraries
2024-07-21 01:22:50,460:INFO:Copying training dataset
2024-07-21 01:22:50,466:INFO:Defining folds
2024-07-21 01:22:50,466:INFO:Declaring metric variables
2024-07-21 01:22:50,469:INFO:Importing untrained model
2024-07-21 01:22:50,472:INFO:Quadratic Discriminant Analysis Imported successfully
2024-07-21 01:22:50,478:INFO:Starting cross validation
2024-07-21 01:22:50,481:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-07-21 01:22:50,791:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-21 01:22:50,816:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-21 01:22:50,818:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-21 01:22:50,818:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-21 01:22:50,896:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:50,906:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:50,915:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:50,919:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:50,921:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:50,921:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:50,929:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:50,930:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:50,931:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:50,938:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:50,940:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:50,940:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:51,112:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-21 01:22:51,172:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:51,177:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:51,183:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:51,198:INFO:Calculating mean and std
2024-07-21 01:22:51,200:INFO:Creating metrics dataframe
2024-07-21 01:22:51,202:INFO:Uploading results into container
2024-07-21 01:22:51,202:INFO:Uploading model into container now
2024-07-21 01:22:51,203:INFO:_master_model_container: 8
2024-07-21 01:22:51,203:INFO:_display_container: 2
2024-07-21 01:22:51,204:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-07-21 01:22:51,204:INFO:create_model() successfully completed......................................
2024-07-21 01:22:51,277:INFO:SubProcess create_model() end ==================================
2024-07-21 01:22:51,277:INFO:Creating metrics dataframe
2024-07-21 01:22:51,285:INFO:Initializing Ada Boost Classifier
2024-07-21 01:22:51,285:INFO:Total runtime is 0.17315774361292524 minutes
2024-07-21 01:22:51,289:INFO:SubProcess create_model() called ==================================
2024-07-21 01:22:51,289:INFO:Initializing create_model()
2024-07-21 01:22:51,289:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7490401eb6a0>, estimator=ada, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x74900eeab610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-21 01:22:51,289:INFO:Checking exceptions
2024-07-21 01:22:51,289:INFO:Importing libraries
2024-07-21 01:22:51,290:INFO:Copying training dataset
2024-07-21 01:22:51,294:INFO:Defining folds
2024-07-21 01:22:51,295:INFO:Declaring metric variables
2024-07-21 01:22:51,298:INFO:Importing untrained model
2024-07-21 01:22:51,301:INFO:Ada Boost Classifier Imported successfully
2024-07-21 01:22:51,308:INFO:Starting cross validation
2024-07-21 01:22:51,311:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-07-21 01:22:51,603:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-21 01:22:51,603:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-21 01:22:51,610:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-21 01:22:51,616:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-21 01:22:51,994:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:52,003:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:52,004:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:52,013:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:52,013:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:52,015:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:52,022:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:52,025:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:52,037:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:52,053:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:52,059:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:52,064:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:52,194:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-21 01:22:52,414:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:52,420:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:52,425:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:52,434:INFO:Calculating mean and std
2024-07-21 01:22:52,435:INFO:Creating metrics dataframe
2024-07-21 01:22:52,437:INFO:Uploading results into container
2024-07-21 01:22:52,438:INFO:Uploading model into container now
2024-07-21 01:22:52,439:INFO:_master_model_container: 9
2024-07-21 01:22:52,439:INFO:_display_container: 2
2024-07-21 01:22:52,440:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=35)
2024-07-21 01:22:52,440:INFO:create_model() successfully completed......................................
2024-07-21 01:22:52,512:INFO:SubProcess create_model() end ==================================
2024-07-21 01:22:52,512:INFO:Creating metrics dataframe
2024-07-21 01:22:52,520:INFO:Initializing Gradient Boosting Classifier
2024-07-21 01:22:52,521:INFO:Total runtime is 0.19374625285466515 minutes
2024-07-21 01:22:52,525:INFO:SubProcess create_model() called ==================================
2024-07-21 01:22:52,525:INFO:Initializing create_model()
2024-07-21 01:22:52,525:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7490401eb6a0>, estimator=gbc, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x74900eeab610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-21 01:22:52,525:INFO:Checking exceptions
2024-07-21 01:22:52,526:INFO:Importing libraries
2024-07-21 01:22:52,526:INFO:Copying training dataset
2024-07-21 01:22:52,531:INFO:Defining folds
2024-07-21 01:22:52,531:INFO:Declaring metric variables
2024-07-21 01:22:52,533:INFO:Importing untrained model
2024-07-21 01:22:52,537:INFO:Gradient Boosting Classifier Imported successfully
2024-07-21 01:22:52,545:INFO:Starting cross validation
2024-07-21 01:22:52,548:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-07-21 01:22:53,513:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:53,523:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:53,533:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:53,539:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:53,555:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:53,560:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:53,573:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:53,577:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:53,590:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:53,594:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:53,605:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:53,617:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:54,263:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:54,268:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:54,274:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:54,289:INFO:Calculating mean and std
2024-07-21 01:22:54,289:INFO:Creating metrics dataframe
2024-07-21 01:22:54,292:INFO:Uploading results into container
2024-07-21 01:22:54,292:INFO:Uploading model into container now
2024-07-21 01:22:54,293:INFO:_master_model_container: 10
2024-07-21 01:22:54,293:INFO:_display_container: 2
2024-07-21 01:22:54,294:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=35, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-07-21 01:22:54,294:INFO:create_model() successfully completed......................................
2024-07-21 01:22:54,363:INFO:SubProcess create_model() end ==================================
2024-07-21 01:22:54,364:INFO:Creating metrics dataframe
2024-07-21 01:22:54,373:INFO:Initializing Linear Discriminant Analysis
2024-07-21 01:22:54,373:INFO:Total runtime is 0.22461262543996177 minutes
2024-07-21 01:22:54,376:INFO:SubProcess create_model() called ==================================
2024-07-21 01:22:54,376:INFO:Initializing create_model()
2024-07-21 01:22:54,377:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7490401eb6a0>, estimator=lda, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x74900eeab610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-21 01:22:54,377:INFO:Checking exceptions
2024-07-21 01:22:54,377:INFO:Importing libraries
2024-07-21 01:22:54,377:INFO:Copying training dataset
2024-07-21 01:22:54,382:INFO:Defining folds
2024-07-21 01:22:54,382:INFO:Declaring metric variables
2024-07-21 01:22:54,385:INFO:Importing untrained model
2024-07-21 01:22:54,388:INFO:Linear Discriminant Analysis Imported successfully
2024-07-21 01:22:54,394:INFO:Starting cross validation
2024-07-21 01:22:54,398:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-07-21 01:22:54,808:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:54,818:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:54,828:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:54,850:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:54,860:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:54,870:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:54,888:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:54,892:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:54,897:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:54,901:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:54,906:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:54,910:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:55,095:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:55,101:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:55,106:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:55,123:INFO:Calculating mean and std
2024-07-21 01:22:55,125:INFO:Creating metrics dataframe
2024-07-21 01:22:55,127:INFO:Uploading results into container
2024-07-21 01:22:55,128:INFO:Uploading model into container now
2024-07-21 01:22:55,129:INFO:_master_model_container: 11
2024-07-21 01:22:55,129:INFO:_display_container: 2
2024-07-21 01:22:55,130:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-07-21 01:22:55,130:INFO:create_model() successfully completed......................................
2024-07-21 01:22:55,206:INFO:SubProcess create_model() end ==================================
2024-07-21 01:22:55,206:INFO:Creating metrics dataframe
2024-07-21 01:22:55,215:INFO:Initializing Extra Trees Classifier
2024-07-21 01:22:55,215:INFO:Total runtime is 0.23865636189778647 minutes
2024-07-21 01:22:55,219:INFO:SubProcess create_model() called ==================================
2024-07-21 01:22:55,219:INFO:Initializing create_model()
2024-07-21 01:22:55,219:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7490401eb6a0>, estimator=et, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x74900eeab610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-21 01:22:55,219:INFO:Checking exceptions
2024-07-21 01:22:55,219:INFO:Importing libraries
2024-07-21 01:22:55,219:INFO:Copying training dataset
2024-07-21 01:22:55,225:INFO:Defining folds
2024-07-21 01:22:55,225:INFO:Declaring metric variables
2024-07-21 01:22:55,229:INFO:Importing untrained model
2024-07-21 01:22:55,233:INFO:Extra Trees Classifier Imported successfully
2024-07-21 01:22:55,241:INFO:Starting cross validation
2024-07-21 01:22:55,246:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-07-21 01:22:56,000:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:56,006:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:56,009:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:56,011:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:56,015:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:56,017:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:56,018:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:56,021:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:56,025:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:56,026:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:56,030:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:56,035:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:56,436:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:56,442:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:56,447:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:22:56,458:INFO:Calculating mean and std
2024-07-21 01:22:56,459:INFO:Creating metrics dataframe
2024-07-21 01:22:56,461:INFO:Uploading results into container
2024-07-21 01:22:56,461:INFO:Uploading model into container now
2024-07-21 01:22:56,462:INFO:_master_model_container: 12
2024-07-21 01:22:56,462:INFO:_display_container: 2
2024-07-21 01:22:56,463:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=35, verbose=0,
                     warm_start=False)
2024-07-21 01:22:56,463:INFO:create_model() successfully completed......................................
2024-07-21 01:22:56,539:INFO:SubProcess create_model() end ==================================
2024-07-21 01:22:56,539:INFO:Creating metrics dataframe
2024-07-21 01:22:56,548:INFO:Initializing Light Gradient Boosting Machine
2024-07-21 01:22:56,549:INFO:Total runtime is 0.2608774423599243 minutes
2024-07-21 01:22:56,552:INFO:SubProcess create_model() called ==================================
2024-07-21 01:22:56,552:INFO:Initializing create_model()
2024-07-21 01:22:56,552:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7490401eb6a0>, estimator=lightgbm, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x74900eeab610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-21 01:22:56,552:INFO:Checking exceptions
2024-07-21 01:22:56,553:INFO:Importing libraries
2024-07-21 01:22:56,553:INFO:Copying training dataset
2024-07-21 01:22:56,558:INFO:Defining folds
2024-07-21 01:22:56,558:INFO:Declaring metric variables
2024-07-21 01:22:56,561:INFO:Importing untrained model
2024-07-21 01:22:56,564:INFO:Light Gradient Boosting Machine Imported successfully
2024-07-21 01:22:56,571:INFO:Starting cross validation
2024-07-21 01:22:56,575:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-07-21 01:23:34,562:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:23:34,579:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:23:34,587:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:24:04,397:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:24:04,442:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:24:04,450:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:24:07,105:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:24:07,130:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:24:07,139:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:24:07,329:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:24:07,345:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:24:07,353:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:24:07,458:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:24:07,465:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:24:07,470:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:24:07,482:INFO:Calculating mean and std
2024-07-21 01:24:07,483:INFO:Creating metrics dataframe
2024-07-21 01:24:07,485:INFO:Uploading results into container
2024-07-21 01:24:07,486:INFO:Uploading model into container now
2024-07-21 01:24:07,487:INFO:_master_model_container: 13
2024-07-21 01:24:07,487:INFO:_display_container: 2
2024-07-21 01:24:07,488:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=35, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-07-21 01:24:07,488:INFO:create_model() successfully completed......................................
2024-07-21 01:24:07,553:INFO:SubProcess create_model() end ==================================
2024-07-21 01:24:07,553:INFO:Creating metrics dataframe
2024-07-21 01:24:07,563:INFO:Initializing Dummy Classifier
2024-07-21 01:24:07,563:INFO:Total runtime is 1.4444461544354756 minutes
2024-07-21 01:24:07,566:INFO:SubProcess create_model() called ==================================
2024-07-21 01:24:07,567:INFO:Initializing create_model()
2024-07-21 01:24:07,567:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7490401eb6a0>, estimator=dummy, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x74900eeab610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-21 01:24:07,567:INFO:Checking exceptions
2024-07-21 01:24:07,568:INFO:Importing libraries
2024-07-21 01:24:07,568:INFO:Copying training dataset
2024-07-21 01:24:07,573:INFO:Defining folds
2024-07-21 01:24:07,573:INFO:Declaring metric variables
2024-07-21 01:24:07,576:INFO:Importing untrained model
2024-07-21 01:24:07,579:INFO:Dummy Classifier Imported successfully
2024-07-21 01:24:07,585:INFO:Starting cross validation
2024-07-21 01:24:07,589:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-07-21 01:24:07,978:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:24:07,980:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:24:07,983:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:24:07,987:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:24:07,989:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:24:07,992:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:24:07,992:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-21 01:24:07,994:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:24:07,994:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-21 01:24:07,997:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:24:07,997:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-21 01:24:07,999:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:24:08,001:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:24:08,003:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:24:08,008:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-21 01:24:08,012:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:24:08,229:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:24:08,235:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:24:08,237:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-21 01:24:08,240:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:24:08,251:INFO:Calculating mean and std
2024-07-21 01:24:08,252:INFO:Creating metrics dataframe
2024-07-21 01:24:08,254:INFO:Uploading results into container
2024-07-21 01:24:08,254:INFO:Uploading model into container now
2024-07-21 01:24:08,255:INFO:_master_model_container: 14
2024-07-21 01:24:08,255:INFO:_display_container: 2
2024-07-21 01:24:08,255:INFO:DummyClassifier(constant=None, random_state=35, strategy='prior')
2024-07-21 01:24:08,256:INFO:create_model() successfully completed......................................
2024-07-21 01:24:08,326:INFO:SubProcess create_model() end ==================================
2024-07-21 01:24:08,326:INFO:Creating metrics dataframe
2024-07-21 01:24:08,337:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2024-07-21 01:24:08,345:INFO:Initializing create_model()
2024-07-21 01:24:08,345:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7490401eb6a0>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-21 01:24:08,345:INFO:Checking exceptions
2024-07-21 01:24:08,347:INFO:Importing libraries
2024-07-21 01:24:08,347:INFO:Copying training dataset
2024-07-21 01:24:08,352:INFO:Defining folds
2024-07-21 01:24:08,352:INFO:Declaring metric variables
2024-07-21 01:24:08,352:INFO:Importing untrained model
2024-07-21 01:24:08,352:INFO:Declaring custom model
2024-07-21 01:24:08,353:INFO:Naive Bayes Imported successfully
2024-07-21 01:24:08,355:INFO:Cross validation set to False
2024-07-21 01:24:08,355:INFO:Fitting Model
2024-07-21 01:24:08,520:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-07-21 01:24:08,520:INFO:create_model() successfully completed......................................
2024-07-21 01:24:08,595:INFO:Initializing create_model()
2024-07-21 01:24:08,595:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7490401eb6a0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-21 01:24:08,595:INFO:Checking exceptions
2024-07-21 01:24:08,597:INFO:Importing libraries
2024-07-21 01:24:08,597:INFO:Copying training dataset
2024-07-21 01:24:08,602:INFO:Defining folds
2024-07-21 01:24:08,602:INFO:Declaring metric variables
2024-07-21 01:24:08,602:INFO:Importing untrained model
2024-07-21 01:24:08,602:INFO:Declaring custom model
2024-07-21 01:24:08,602:INFO:K Neighbors Classifier Imported successfully
2024-07-21 01:24:08,605:INFO:Cross validation set to False
2024-07-21 01:24:08,605:INFO:Fitting Model
2024-07-21 01:24:08,767:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-07-21 01:24:08,767:INFO:create_model() successfully completed......................................
2024-07-21 01:24:08,837:INFO:Initializing create_model()
2024-07-21 01:24:08,838:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7490401eb6a0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=35, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-21 01:24:08,838:INFO:Checking exceptions
2024-07-21 01:24:08,840:INFO:Importing libraries
2024-07-21 01:24:08,840:INFO:Copying training dataset
2024-07-21 01:24:08,845:INFO:Defining folds
2024-07-21 01:24:08,845:INFO:Declaring metric variables
2024-07-21 01:24:08,845:INFO:Importing untrained model
2024-07-21 01:24:08,845:INFO:Declaring custom model
2024-07-21 01:24:08,846:INFO:Logistic Regression Imported successfully
2024-07-21 01:24:08,849:INFO:Cross validation set to False
2024-07-21 01:24:08,849:INFO:Fitting Model
2024-07-21 01:24:09,397:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-21 01:24:09,398:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=35, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-07-21 01:24:09,399:INFO:create_model() successfully completed......................................
2024-07-21 01:24:09,495:INFO:Initializing create_model()
2024-07-21 01:24:09,495:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7490401eb6a0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=35, verbose=0,
                       warm_start=False), fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-21 01:24:09,496:INFO:Checking exceptions
2024-07-21 01:24:09,498:INFO:Importing libraries
2024-07-21 01:24:09,498:INFO:Copying training dataset
2024-07-21 01:24:09,505:INFO:Defining folds
2024-07-21 01:24:09,505:INFO:Declaring metric variables
2024-07-21 01:24:09,505:INFO:Importing untrained model
2024-07-21 01:24:09,506:INFO:Declaring custom model
2024-07-21 01:24:09,506:INFO:Random Forest Classifier Imported successfully
2024-07-21 01:24:09,509:INFO:Cross validation set to False
2024-07-21 01:24:09,510:INFO:Fitting Model
2024-07-21 01:24:09,851:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=35, verbose=0,
                       warm_start=False)
2024-07-21 01:24:09,852:INFO:create_model() successfully completed......................................
2024-07-21 01:24:09,928:INFO:Initializing create_model()
2024-07-21 01:24:09,929:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7490401eb6a0>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=35, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-21 01:24:09,929:INFO:Checking exceptions
2024-07-21 01:24:09,930:INFO:Importing libraries
2024-07-21 01:24:09,931:INFO:Copying training dataset
2024-07-21 01:24:09,935:INFO:Defining folds
2024-07-21 01:24:09,935:INFO:Declaring metric variables
2024-07-21 01:24:09,936:INFO:Importing untrained model
2024-07-21 01:24:09,936:INFO:Declaring custom model
2024-07-21 01:24:09,936:INFO:SVM - Linear Kernel Imported successfully
2024-07-21 01:24:09,939:INFO:Cross validation set to False
2024-07-21 01:24:09,939:INFO:Fitting Model
2024-07-21 01:24:10,130:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=35, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-07-21 01:24:10,130:INFO:create_model() successfully completed......................................
2024-07-21 01:24:10,205:INFO:Initializing create_model()
2024-07-21 01:24:10,205:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7490401eb6a0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=35, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-21 01:24:10,205:INFO:Checking exceptions
2024-07-21 01:24:10,207:INFO:Importing libraries
2024-07-21 01:24:10,207:INFO:Copying training dataset
2024-07-21 01:24:10,211:INFO:Defining folds
2024-07-21 01:24:10,212:INFO:Declaring metric variables
2024-07-21 01:24:10,212:INFO:Importing untrained model
2024-07-21 01:24:10,212:INFO:Declaring custom model
2024-07-21 01:24:10,212:INFO:Light Gradient Boosting Machine Imported successfully
2024-07-21 01:24:10,215:INFO:Cross validation set to False
2024-07-21 01:24:10,215:INFO:Fitting Model
2024-07-21 01:24:10,377:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2024-07-21 01:24:10,377:INFO:[LightGBM] [Info] Number of positive: 912, number of negative: 2539
2024-07-21 01:24:10,378:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000170 seconds.
2024-07-21 01:24:10,378:INFO:You can set `force_row_wise=true` to remove the overhead.
2024-07-21 01:24:10,378:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2024-07-21 01:24:10,378:INFO:[LightGBM] [Info] Total Bins 417
2024-07-21 01:24:10,379:INFO:[LightGBM] [Info] Number of data points in the train set: 3451, number of used features: 40
2024-07-21 01:24:10,379:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.264271 -> initscore=-1.023886
2024-07-21 01:24:10,379:INFO:[LightGBM] [Info] Start training from score -1.023886
2024-07-21 01:24:10,380:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:24:10,380:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:24:10,381:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:24:10,381:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:24:10,382:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:24:10,383:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:24:10,383:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:24:10,384:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:24:10,384:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:24:10,385:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:24:10,385:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:24:10,386:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:24:10,387:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:24:10,387:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:24:10,388:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:24:10,388:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:24:10,389:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:24:10,389:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:24:10,390:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:24:10,391:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:24:10,391:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:24:10,392:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:24:10,392:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:24:10,393:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:24:10,394:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:24:10,394:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:24:10,395:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:24:10,395:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:24:10,396:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:24:10,396:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:24:10,397:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:24:10,398:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:24:10,398:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:24:10,399:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:24:10,399:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:24:10,400:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:24:10,400:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:24:10,401:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:24:10,402:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:24:10,402:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:24:10,403:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:24:10,404:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:24:10,404:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:24:10,405:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:24:10,405:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:24:10,406:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:24:10,407:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:24:10,407:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:24:10,408:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:24:10,408:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:24:10,409:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:24:10,410:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:24:10,410:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:24:10,411:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-07-21 01:24:10,436:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=35, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-07-21 01:24:10,436:INFO:create_model() successfully completed......................................
2024-07-21 01:24:10,515:INFO:Initializing create_model()
2024-07-21 01:24:10,516:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7490401eb6a0>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-21 01:24:10,516:INFO:Checking exceptions
2024-07-21 01:24:10,518:INFO:Importing libraries
2024-07-21 01:24:10,518:INFO:Copying training dataset
2024-07-21 01:24:10,523:INFO:Defining folds
2024-07-21 01:24:10,523:INFO:Declaring metric variables
2024-07-21 01:24:10,523:INFO:Importing untrained model
2024-07-21 01:24:10,523:INFO:Declaring custom model
2024-07-21 01:24:10,524:INFO:Quadratic Discriminant Analysis Imported successfully
2024-07-21 01:24:10,526:INFO:Cross validation set to False
2024-07-21 01:24:10,526:INFO:Fitting Model
2024-07-21 01:24:10,686:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-21 01:24:10,688:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-07-21 01:24:10,688:INFO:create_model() successfully completed......................................
2024-07-21 01:24:10,778:INFO:Initializing create_model()
2024-07-21 01:24:10,779:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7490401eb6a0>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=35, solver='auto',
                tol=0.0001), fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-21 01:24:10,779:INFO:Checking exceptions
2024-07-21 01:24:10,781:INFO:Importing libraries
2024-07-21 01:24:10,781:INFO:Copying training dataset
2024-07-21 01:24:10,788:INFO:Defining folds
2024-07-21 01:24:10,789:INFO:Declaring metric variables
2024-07-21 01:24:10,789:INFO:Importing untrained model
2024-07-21 01:24:10,789:INFO:Declaring custom model
2024-07-21 01:24:10,790:INFO:Ridge Classifier Imported successfully
2024-07-21 01:24:10,794:INFO:Cross validation set to False
2024-07-21 01:24:10,794:INFO:Fitting Model
2024-07-21 01:24:10,969:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=35, solver='auto',
                tol=0.0001)
2024-07-21 01:24:10,969:INFO:create_model() successfully completed......................................
2024-07-21 01:24:11,064:INFO:Initializing create_model()
2024-07-21 01:24:11,065:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7490401eb6a0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=35, verbose=0,
                     warm_start=False), fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-21 01:24:11,065:INFO:Checking exceptions
2024-07-21 01:24:11,067:INFO:Importing libraries
2024-07-21 01:24:11,067:INFO:Copying training dataset
2024-07-21 01:24:11,074:INFO:Defining folds
2024-07-21 01:24:11,074:INFO:Declaring metric variables
2024-07-21 01:24:11,075:INFO:Importing untrained model
2024-07-21 01:24:11,075:INFO:Declaring custom model
2024-07-21 01:24:11,076:INFO:Extra Trees Classifier Imported successfully
2024-07-21 01:24:11,079:INFO:Cross validation set to False
2024-07-21 01:24:11,079:INFO:Fitting Model
2024-07-21 01:24:11,407:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=35, verbose=0,
                     warm_start=False)
2024-07-21 01:24:11,407:INFO:create_model() successfully completed......................................
2024-07-21 01:24:11,487:INFO:Initializing create_model()
2024-07-21 01:24:11,487:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7490401eb6a0>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-21 01:24:11,487:INFO:Checking exceptions
2024-07-21 01:24:11,489:INFO:Importing libraries
2024-07-21 01:24:11,489:INFO:Copying training dataset
2024-07-21 01:24:11,495:INFO:Defining folds
2024-07-21 01:24:11,495:INFO:Declaring metric variables
2024-07-21 01:24:11,496:INFO:Importing untrained model
2024-07-21 01:24:11,496:INFO:Declaring custom model
2024-07-21 01:24:11,496:INFO:Linear Discriminant Analysis Imported successfully
2024-07-21 01:24:11,499:INFO:Cross validation set to False
2024-07-21 01:24:11,499:INFO:Fitting Model
2024-07-21 01:24:11,682:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-07-21 01:24:11,683:INFO:create_model() successfully completed......................................
2024-07-21 01:24:11,807:INFO:_master_model_container: 14
2024-07-21 01:24:11,807:INFO:_display_container: 2
2024-07-21 01:24:11,811:INFO:[GaussianNB(priors=None, var_smoothing=1e-09), KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=35, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=35, verbose=0,
                       warm_start=False), SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=35, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=35, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=35, solver='auto',
                tol=0.0001), ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=35, verbose=0,
                     warm_start=False), LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)]
2024-07-21 01:24:11,811:INFO:compare_models() successfully completed......................................
2024-07-21 01:24:21,127:INFO:Initializing plot_model()
2024-07-21 01:24:21,127:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, display_format=None, estimator=GaussianNB(priors=None, var_smoothing=1e-09), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7490401eb6a0>, system=True)
2024-07-21 01:24:21,127:INFO:Checking exceptions
2024-07-21 01:24:21,132:INFO:Preloading libraries
2024-07-21 01:24:21,132:INFO:Copying training dataset
2024-07-21 01:24:21,132:INFO:Plot type: confusion_matrix
2024-07-21 01:24:21,295:INFO:Fitting Model
2024-07-21 01:24:21,296:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/base.py:493: UserWarning: X does not have valid feature names, but GaussianNB was fitted with feature names
  warnings.warn(

2024-07-21 01:24:21,296:INFO:Scoring test/hold-out set
2024-07-21 01:24:21,324:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:21,327:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:21,328:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:21,330:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:21,331:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:21,333:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:21,336:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:21,337:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:21,339:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:21,339:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:21,339:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:21,340:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:21,370:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:21,370:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:21,371:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:21,372:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:21,372:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:21,373:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:21,373:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:21,375:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:21,376:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:21,377:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:21,378:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:21,380:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:21,380:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:21,382:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:21,383:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:21,384:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:21,384:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:21,385:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:21,385:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:21,385:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:21,386:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:21,386:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:21,387:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:21,459:INFO:Visual Rendered Successfully
2024-07-21 01:24:21,534:INFO:plot_model() successfully completed......................................
2024-07-21 01:24:31,446:INFO:Initializing plot_model()
2024-07-21 01:24:31,446:INFO:plot_model(plot=auc, fold=None, verbose=True, display=None, display_format=None, estimator=GaussianNB(priors=None, var_smoothing=1e-09), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7490401eb6a0>, system=True)
2024-07-21 01:24:31,446:INFO:Checking exceptions
2024-07-21 01:24:31,451:INFO:Preloading libraries
2024-07-21 01:24:31,452:INFO:Copying training dataset
2024-07-21 01:24:31,452:INFO:Plot type: auc
2024-07-21 01:24:31,612:INFO:Fitting Model
2024-07-21 01:24:31,613:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/base.py:493: UserWarning: X does not have valid feature names, but GaussianNB was fitted with feature names
  warnings.warn(

2024-07-21 01:24:31,613:INFO:Scoring test/hold-out set
2024-07-21 01:24:31,646:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,647:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,647:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,648:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,648:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,649:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,649:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,652:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,653:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,654:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,654:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,671:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,682:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,682:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,684:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,684:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,685:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,685:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,687:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,687:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,689:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,689:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,690:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,690:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,691:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,692:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,692:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,693:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,693:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,694:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,694:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,695:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,695:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,697:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,698:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,699:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,721:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,721:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,722:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,722:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,727:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,728:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,728:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,729:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,747:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,748:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,748:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,749:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,753:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,753:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,753:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,754:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,754:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,755:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,755:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,757:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,757:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,758:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,759:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,762:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,763:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,763:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,764:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,765:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,766:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,768:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,769:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,772:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,773:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,774:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,774:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,775:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,776:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,779:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,782:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,783:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,783:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,784:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,784:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,785:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,785:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,786:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,786:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,788:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,788:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,789:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,789:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,790:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,790:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,791:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,791:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,792:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,792:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,793:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,793:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,793:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,794:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,795:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,796:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,797:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,797:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,798:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,799:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:31,844:INFO:Visual Rendered Successfully
2024-07-21 01:24:31,931:INFO:plot_model() successfully completed......................................
2024-07-21 01:24:40,456:INFO:Initializing plot_model()
2024-07-21 01:24:40,457:INFO:plot_model(plot=feature, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=35, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7490401eb6a0>, system=True)
2024-07-21 01:24:40,457:INFO:Checking exceptions
2024-07-21 01:24:40,461:INFO:Preloading libraries
2024-07-21 01:24:40,462:INFO:Copying training dataset
2024-07-21 01:24:40,462:INFO:Plot type: feature
2024-07-21 01:24:40,567:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:40,568:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:40,568:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:40,569:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:40,569:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:40,570:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:40,571:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:40,571:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:40,572:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:40,572:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:40,573:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:40,575:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:40,576:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:40,576:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:40,576:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:40,585:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:40,586:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:40,586:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:40,586:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:40,587:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:40,593:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:40,654:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:40,654:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:40,655:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:40,656:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:40,656:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:40,657:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:40,658:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:40,659:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:40,660:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:40,660:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:40,661:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:40,665:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:40,665:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:40,666:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:40,666:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:40,669:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:40,670:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:40,670:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:40,671:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:40,671:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:40,672:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:40,673:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:40,674:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:40,675:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:40,676:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:40,680:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:40,681:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:40,684:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:40,685:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:40,687:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:40,688:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:40,689:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:40,690:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:40,691:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:40,692:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:40,693:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:40,694:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:40,697:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:40,698:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:24:40,718:INFO:Visual Rendered Successfully
2024-07-21 01:24:40,791:INFO:plot_model() successfully completed......................................
2024-07-21 01:24:47,122:INFO:Initializing tune_model()
2024-07-21 01:24:47,122:INFO:tune_model(estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=35, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7490401eb6a0>)
2024-07-21 01:24:47,123:INFO:Checking exceptions
2024-07-21 01:24:47,139:INFO:Copying training dataset
2024-07-21 01:24:47,143:INFO:Checking base model
2024-07-21 01:24:47,143:INFO:Base model : Logistic Regression
2024-07-21 01:24:47,146:INFO:Declaring metric variables
2024-07-21 01:24:47,149:INFO:Defining Hyperparameters
2024-07-21 01:24:47,219:INFO:Tuning with n_jobs=-1
2024-07-21 01:24:47,219:INFO:Initializing RandomizedSearchCV
2024-07-21 01:24:48,006:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-21 01:24:49,535:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-21 01:24:50,884:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-21 01:24:51,095:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-21 01:24:51,653:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-21 01:24:51,860:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-21 01:24:52,196:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-21 01:24:52,418:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-21 01:24:52,629:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-21 01:24:53,226:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-21 01:24:53,397:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-21 01:24:53,842:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-21 01:24:53,983:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-21 01:24:54,140:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-21 01:24:54,651:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-21 01:24:54,861:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-21 01:24:56,180:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-21 01:24:56,701:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-21 01:24:56,723:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-21 01:24:57,017:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-21 01:24:57,528:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-21 01:24:57,764:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-21 01:25:00,795:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-21 01:25:01,071:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-21 01:25:04,157:INFO:best_params: {'actual_estimator__class_weight': 'balanced', 'actual_estimator__C': 1.397}
2024-07-21 01:25:04,158:INFO:Hyperparameter search completed
2024-07-21 01:25:04,159:INFO:SubProcess create_model() called ==================================
2024-07-21 01:25:04,159:INFO:Initializing create_model()
2024-07-21 01:25:04,159:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7490401eb6a0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=35, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x749000e9ef20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'class_weight': 'balanced', 'C': 1.397})
2024-07-21 01:25:04,160:INFO:Checking exceptions
2024-07-21 01:25:04,160:INFO:Importing libraries
2024-07-21 01:25:04,160:INFO:Copying training dataset
2024-07-21 01:25:04,165:INFO:Defining folds
2024-07-21 01:25:04,165:INFO:Declaring metric variables
2024-07-21 01:25:04,168:INFO:Importing untrained model
2024-07-21 01:25:04,169:INFO:Declaring custom model
2024-07-21 01:25:04,172:INFO:Logistic Regression Imported successfully
2024-07-21 01:25:04,178:INFO:Starting cross validation
2024-07-21 01:25:04,181:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-21 01:25:04,887:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-21 01:25:04,896:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-21 01:25:04,964:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:25:04,968:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:25:04,971:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:25:04,974:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:25:04,978:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:25:04,981:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:25:04,982:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:25:04,989:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:25:04,993:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:25:04,994:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:25:05,000:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:25:05,006:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:25:05,669:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-21 01:25:05,702:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-21 01:25:05,705:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-21 01:25:05,775:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:25:05,782:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:25:05,782:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:25:05,788:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:25:05,789:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:25:05,795:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:25:05,801:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:25:05,808:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:25:05,815:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:25:05,816:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:25:05,823:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:25:05,828:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:25:06,239:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-21 01:25:06,283:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:25:06,287:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:25:06,291:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:25:06,297:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:25:06,301:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:25:06,304:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:25:06,318:INFO:Calculating mean and std
2024-07-21 01:25:06,319:INFO:Creating metrics dataframe
2024-07-21 01:25:06,324:INFO:Finalizing model
2024-07-21 01:25:06,780:INFO:Uploading results into container
2024-07-21 01:25:06,781:INFO:Uploading model into container now
2024-07-21 01:25:06,782:INFO:_master_model_container: 15
2024-07-21 01:25:06,782:INFO:_display_container: 3
2024-07-21 01:25:06,782:INFO:LogisticRegression(C=1.397, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=35, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-07-21 01:25:06,782:INFO:create_model() successfully completed......................................
2024-07-21 01:25:06,876:INFO:SubProcess create_model() end ==================================
2024-07-21 01:25:06,876:INFO:choose_better activated
2024-07-21 01:25:06,884:INFO:SubProcess create_model() called ==================================
2024-07-21 01:25:06,885:INFO:Initializing create_model()
2024-07-21 01:25:06,885:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7490401eb6a0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=35, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-21 01:25:06,885:INFO:Checking exceptions
2024-07-21 01:25:06,887:INFO:Importing libraries
2024-07-21 01:25:06,887:INFO:Copying training dataset
2024-07-21 01:25:06,894:INFO:Defining folds
2024-07-21 01:25:06,894:INFO:Declaring metric variables
2024-07-21 01:25:06,894:INFO:Importing untrained model
2024-07-21 01:25:06,894:INFO:Declaring custom model
2024-07-21 01:25:06,894:INFO:Logistic Regression Imported successfully
2024-07-21 01:25:06,895:INFO:Starting cross validation
2024-07-21 01:25:06,898:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-21 01:25:07,670:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:25:07,673:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:25:07,677:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:25:07,682:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:25:07,683:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:25:07,688:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:25:07,769:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:25:07,775:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:25:07,782:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:25:07,789:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:25:07,795:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:25:07,802:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:25:08,397:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:25:08,406:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:25:08,412:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:25:08,428:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:25:08,434:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:25:08,441:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:25:08,501:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:25:08,508:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:25:08,515:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:25:08,529:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:25:08,535:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:25:08,542:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:25:08,916:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:25:08,920:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:25:08,923:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:25:08,924:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:25:08,928:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:25:08,932:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-21 01:25:08,940:INFO:Calculating mean and std
2024-07-21 01:25:08,940:INFO:Creating metrics dataframe
2024-07-21 01:25:08,942:INFO:Finalizing model
2024-07-21 01:25:09,459:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-21 01:25:09,460:INFO:Uploading results into container
2024-07-21 01:25:09,461:INFO:Uploading model into container now
2024-07-21 01:25:09,461:INFO:_master_model_container: 16
2024-07-21 01:25:09,461:INFO:_display_container: 4
2024-07-21 01:25:09,462:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=35, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-07-21 01:25:09,462:INFO:create_model() successfully completed......................................
2024-07-21 01:25:09,549:INFO:SubProcess create_model() end ==================================
2024-07-21 01:25:09,550:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=35, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for Accuracy is 0.7633
2024-07-21 01:25:09,550:INFO:LogisticRegression(C=1.397, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=35, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for Accuracy is 0.7989
2024-07-21 01:25:09,551:INFO:LogisticRegression(C=1.397, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=35, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) is best model
2024-07-21 01:25:09,551:INFO:choose_better completed
2024-07-21 01:25:09,564:INFO:_master_model_container: 16
2024-07-21 01:25:09,564:INFO:_display_container: 3
2024-07-21 01:25:09,564:INFO:LogisticRegression(C=1.397, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=35, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-07-21 01:25:09,565:INFO:tune_model() successfully completed......................................
2024-07-21 01:25:27,039:INFO:Initializing finalize_model()
2024-07-21 01:25:27,039:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7490401eb6a0>, estimator=LogisticRegression(C=1.397, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=35, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-07-21 01:25:27,040:INFO:Finalizing LogisticRegression(C=1.397, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=35, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-07-21 01:25:27,044:INFO:Initializing create_model()
2024-07-21 01:25:27,044:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7490401eb6a0>, estimator=LogisticRegression(C=1.397, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=35, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-07-21 01:25:27,044:INFO:Checking exceptions
2024-07-21 01:25:27,045:INFO:Importing libraries
2024-07-21 01:25:27,045:INFO:Copying training dataset
2024-07-21 01:25:27,046:INFO:Defining folds
2024-07-21 01:25:27,046:INFO:Declaring metric variables
2024-07-21 01:25:27,046:INFO:Importing untrained model
2024-07-21 01:25:27,046:INFO:Declaring custom model
2024-07-21 01:25:27,047:INFO:Logistic Regression Imported successfully
2024-07-21 01:25:27,050:INFO:Cross validation set to False
2024-07-21 01:25:27,050:INFO:Fitting Model
2024-07-21 01:25:27,883:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SeniorCitizen', 'tenure',
                                             'MonthlyCharges'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False...
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 LogisticRegression(C=1.397, class_weight='balanced',
                                    dual=False, fit_intercept=True,
                                    intercept_scaling=1, l1_ratio=None,
                                    max_iter=1000, multi_class='auto',
                                    n_jobs=None, penalty='l2', random_state=35,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2024-07-21 01:25:27,884:INFO:create_model() successfully completed......................................
2024-07-21 01:25:27,953:INFO:_master_model_container: 16
2024-07-21 01:25:27,954:INFO:_display_container: 3
2024-07-21 01:25:27,999:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SeniorCitizen', 'tenure',
                                             'MonthlyCharges'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False...
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 LogisticRegression(C=1.397, class_weight='balanced',
                                    dual=False, fit_intercept=True,
                                    intercept_scaling=1, l1_ratio=None,
                                    max_iter=1000, multi_class='auto',
                                    n_jobs=None, penalty='l2', random_state=35,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2024-07-21 01:25:27,999:INFO:finalize_model() successfully completed......................................
2024-07-21 01:26:04,175:INFO:PyCaret RegressionExperiment
2024-07-21 01:26:04,176:INFO:Logging name: reg-default-name
2024-07-21 01:26:04,176:INFO:ML Usecase: MLUsecase.REGRESSION
2024-07-21 01:26:04,176:INFO:version 3.3.2
2024-07-21 01:26:04,176:INFO:Initializing setup()
2024-07-21 01:26:04,176:INFO:self.USI: de80
2024-07-21 01:26:04,176:INFO:self._variable_keys: {'X_train', 'X_test', 'n_jobs_param', 'y_train', 'logging_param', 'pipeline', 'gpu_param', '_ml_usecase', 'target_param', 'fold_generator', 'exp_name_log', 'transform_target_param', 'fold_shuffle_param', 'USI', 'fold_groups_param', 'y', 'gpu_n_jobs_param', 'memory', 'idx', 'exp_id', 'X', '_available_plots', 'seed', 'y_test', 'html_param', 'log_plots_param', 'data'}
2024-07-21 01:26:04,176:INFO:Checking environment
2024-07-21 01:26:04,176:INFO:python_version: 3.10.13
2024-07-21 01:26:04,176:INFO:python_build: ('main', 'Jul 11 2024 16:23:02')
2024-07-21 01:26:04,176:INFO:machine: x86_64
2024-07-21 01:26:04,176:INFO:platform: Linux-6.5.0-1022-azure-x86_64-with-glibc2.31
2024-07-21 01:26:04,176:INFO:Memory: svmem(total=16757342208, available=12913811456, percent=22.9, used=3410898944, free=1938100224, active=4278980608, inactive=9543188480, buffers=239706112, cached=11168636928, shared=69402624, slab=800669696)
2024-07-21 01:26:04,177:INFO:Physical Core: 2
2024-07-21 01:26:04,177:INFO:Logical Core: 4
2024-07-21 01:26:04,177:INFO:Checking libraries
2024-07-21 01:26:04,177:INFO:System:
2024-07-21 01:26:04,177:INFO:    python: 3.10.13 (main, Jul 11 2024, 16:23:02) [GCC 9.4.0]
2024-07-21 01:26:04,177:INFO:executable: /home/codespace/.python/current/bin/python
2024-07-21 01:26:04,177:INFO:   machine: Linux-6.5.0-1022-azure-x86_64-with-glibc2.31
2024-07-21 01:26:04,177:INFO:PyCaret required dependencies:
2024-07-21 01:26:04,177:INFO:                 pip: 24.1.2
2024-07-21 01:26:04,178:INFO:          setuptools: 68.2.2
2024-07-21 01:26:04,178:INFO:             pycaret: 3.3.2
2024-07-21 01:26:04,178:INFO:             IPython: 8.26.0
2024-07-21 01:26:04,178:INFO:          ipywidgets: 8.1.3
2024-07-21 01:26:04,178:INFO:                tqdm: 4.66.4
2024-07-21 01:26:04,178:INFO:               numpy: 1.26.4
2024-07-21 01:26:04,178:INFO:              pandas: 2.1.4
2024-07-21 01:26:04,178:INFO:              jinja2: 3.1.4
2024-07-21 01:26:04,178:INFO:               scipy: 1.11.4
2024-07-21 01:26:04,178:INFO:              joblib: 1.3.2
2024-07-21 01:26:04,178:INFO:             sklearn: 1.4.2
2024-07-21 01:26:04,178:INFO:                pyod: 2.0.1
2024-07-21 01:26:04,178:INFO:            imblearn: 0.12.3
2024-07-21 01:26:04,178:INFO:   category_encoders: 2.6.3
2024-07-21 01:26:04,178:INFO:            lightgbm: 4.4.0
2024-07-21 01:26:04,178:INFO:               numba: 0.60.0
2024-07-21 01:26:04,178:INFO:            requests: 2.32.3
2024-07-21 01:26:04,179:INFO:          matplotlib: 3.7.5
2024-07-21 01:26:04,179:INFO:          scikitplot: 0.3.7
2024-07-21 01:26:04,179:INFO:         yellowbrick: 1.5
2024-07-21 01:26:04,179:INFO:              plotly: 5.22.0
2024-07-21 01:26:04,179:INFO:    plotly-resampler: Not installed
2024-07-21 01:26:04,179:INFO:             kaleido: 0.2.1
2024-07-21 01:26:04,179:INFO:           schemdraw: 0.15
2024-07-21 01:26:04,179:INFO:         statsmodels: 0.14.2
2024-07-21 01:26:04,179:INFO:              sktime: 0.26.0
2024-07-21 01:26:04,179:INFO:               tbats: 1.1.3
2024-07-21 01:26:04,179:INFO:            pmdarima: 2.0.4
2024-07-21 01:26:04,179:INFO:              psutil: 6.0.0
2024-07-21 01:26:04,179:INFO:          markupsafe: 2.1.5
2024-07-21 01:26:04,179:INFO:             pickle5: Not installed
2024-07-21 01:26:04,179:INFO:         cloudpickle: 3.0.0
2024-07-21 01:26:04,179:INFO:         deprecation: 2.1.0
2024-07-21 01:26:04,179:INFO:              xxhash: 3.4.1
2024-07-21 01:26:04,179:INFO:           wurlitzer: 3.1.1
2024-07-21 01:26:04,180:INFO:PyCaret optional dependencies:
2024-07-21 01:26:04,180:INFO:                shap: Not installed
2024-07-21 01:26:04,180:INFO:           interpret: Not installed
2024-07-21 01:26:04,180:INFO:                umap: Not installed
2024-07-21 01:26:04,180:INFO:     ydata_profiling: Not installed
2024-07-21 01:26:04,180:INFO:  explainerdashboard: Not installed
2024-07-21 01:26:04,180:INFO:             autoviz: Not installed
2024-07-21 01:26:04,180:INFO:           fairlearn: Not installed
2024-07-21 01:26:04,180:INFO:          deepchecks: Not installed
2024-07-21 01:26:04,180:INFO:             xgboost: Not installed
2024-07-21 01:26:04,180:INFO:            catboost: Not installed
2024-07-21 01:26:04,180:INFO:              kmodes: Not installed
2024-07-21 01:26:04,180:INFO:             mlxtend: Not installed
2024-07-21 01:26:04,180:INFO:       statsforecast: Not installed
2024-07-21 01:26:04,180:INFO:        tune_sklearn: Not installed
2024-07-21 01:26:04,180:INFO:                 ray: Not installed
2024-07-21 01:26:04,180:INFO:            hyperopt: Not installed
2024-07-21 01:26:04,181:INFO:              optuna: Not installed
2024-07-21 01:26:04,181:INFO:               skopt: Not installed
2024-07-21 01:26:04,181:INFO:              mlflow: Not installed
2024-07-21 01:26:04,181:INFO:              gradio: Not installed
2024-07-21 01:26:04,181:INFO:             fastapi: Not installed
2024-07-21 01:26:04,181:INFO:             uvicorn: Not installed
2024-07-21 01:26:04,181:INFO:              m2cgen: Not installed
2024-07-21 01:26:04,181:INFO:           evidently: Not installed
2024-07-21 01:26:04,181:INFO:               fugue: Not installed
2024-07-21 01:26:04,181:INFO:           streamlit: Not installed
2024-07-21 01:26:04,181:INFO:             prophet: Not installed
2024-07-21 01:26:04,181:INFO:None
2024-07-21 01:26:04,181:INFO:Set up data.
2024-07-21 01:26:04,186:INFO:Set up folding strategy.
2024-07-21 01:26:04,186:INFO:Set up train/test split.
2024-07-21 01:26:04,190:INFO:Set up index.
2024-07-21 01:26:04,190:INFO:Assigning column types.
2024-07-21 01:26:04,193:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-21 01:26:04,193:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-07-21 01:26:04,197:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-07-21 01:26:04,201:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-07-21 01:26:04,253:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-07-21 01:26:04,291:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-21 01:26:04,292:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-21 01:26:04,292:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-21 01:26:04,293:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-07-21 01:26:04,297:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-07-21 01:26:04,301:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-07-21 01:26:04,350:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-07-21 01:26:04,389:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-21 01:26:04,390:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-21 01:26:04,390:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-21 01:26:04,391:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-07-21 01:26:04,395:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-07-21 01:26:04,399:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-07-21 01:26:04,457:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-07-21 01:26:04,497:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-21 01:26:04,497:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-21 01:26:04,498:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-21 01:26:04,502:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-07-21 01:26:04,506:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-07-21 01:26:04,565:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-07-21 01:26:04,604:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-21 01:26:04,605:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-21 01:26:04,605:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-21 01:26:04,606:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-07-21 01:26:04,614:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-07-21 01:26:04,664:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-07-21 01:26:04,703:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-21 01:26:04,703:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-21 01:26:04,704:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-21 01:26:04,712:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-07-21 01:26:04,763:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-07-21 01:26:04,802:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-21 01:26:04,802:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-21 01:26:04,802:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-21 01:26:04,803:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-07-21 01:26:04,862:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-07-21 01:26:04,901:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-21 01:26:04,901:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-21 01:26:04,901:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-21 01:26:04,969:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-07-21 01:26:05,008:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-21 01:26:05,009:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-21 01:26:05,009:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-21 01:26:05,009:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-21 01:26:05,067:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-07-21 01:26:05,107:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-21 01:26:05,107:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-21 01:26:05,166:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-07-21 01:26:05,205:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-21 01:26:05,205:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-21 01:26:05,205:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-07-21 01:26:05,315:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-21 01:26:05,315:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-21 01:26:05,421:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-21 01:26:05,421:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-21 01:26:05,422:INFO:Preparing preprocessing pipeline...
2024-07-21 01:26:05,422:INFO:Set up simple imputation.
2024-07-21 01:26:05,425:INFO:Set up encoding of ordinal features.
2024-07-21 01:26:05,427:INFO:Set up encoding of categorical features.
2024-07-21 01:26:05,490:INFO:Finished creating preprocessing pipeline.
2024-07-21 01:26:05,512:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['sex', 's...
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None, include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2024-07-21 01:26:05,512:INFO:Creating final display dataframe.
2024-07-21 01:26:05,707:INFO:Setup _display_container:                     Description             Value
0                    Session id                35
1                        Target           charges
2                   Target type        Regression
3           Original data shape         (1070, 7)
4        Transformed data shape        (1070, 10)
5   Transformed train set shape         (749, 10)
6    Transformed test set shape         (321, 10)
7              Numeric features                 3
8          Categorical features                 3
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15               Fold Generator             KFold
16                  Fold Number                10
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment             False
20              Experiment Name  reg-default-name
21                          USI              de80
2024-07-21 01:26:05,813:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-21 01:26:05,813:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-21 01:26:05,917:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-21 01:26:05,918:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-21 01:26:05,918:INFO:setup() successfully completed in 1.74s...............
2024-07-21 01:26:27,614:INFO:Initializing compare_models()
2024-07-21 01:26:27,615:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x749040166e60>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x749040166e60>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2024-07-21 01:26:27,615:INFO:Checking exceptions
2024-07-21 01:26:27,617:INFO:Preparing display monitor
2024-07-21 01:26:27,638:INFO:Initializing Linear Regression
2024-07-21 01:26:27,639:INFO:Total runtime is 3.1908353169759113e-06 minutes
2024-07-21 01:26:27,642:INFO:SubProcess create_model() called ==================================
2024-07-21 01:26:27,642:INFO:Initializing create_model()
2024-07-21 01:26:27,642:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x749040166e60>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x74900ef1e740>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-21 01:26:27,642:INFO:Checking exceptions
2024-07-21 01:26:27,642:INFO:Importing libraries
2024-07-21 01:26:27,642:INFO:Copying training dataset
2024-07-21 01:26:27,645:INFO:Defining folds
2024-07-21 01:26:27,646:INFO:Declaring metric variables
2024-07-21 01:26:27,648:INFO:Importing untrained model
2024-07-21 01:26:27,651:INFO:Linear Regression Imported successfully
2024-07-21 01:26:27,657:INFO:Starting cross validation
2024-07-21 01:26:27,659:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-21 01:26:27,958:INFO:Calculating mean and std
2024-07-21 01:26:27,959:INFO:Creating metrics dataframe
2024-07-21 01:26:27,961:INFO:Uploading results into container
2024-07-21 01:26:27,961:INFO:Uploading model into container now
2024-07-21 01:26:27,961:INFO:_master_model_container: 1
2024-07-21 01:26:27,961:INFO:_display_container: 2
2024-07-21 01:26:27,962:INFO:LinearRegression(copy_X=True, fit_intercept=True, n_jobs=-1, positive=False)
2024-07-21 01:26:27,962:INFO:create_model() successfully completed......................................
2024-07-21 01:26:28,042:INFO:SubProcess create_model() end ==================================
2024-07-21 01:26:28,042:INFO:Creating metrics dataframe
2024-07-21 01:26:28,048:INFO:Initializing Lasso Regression
2024-07-21 01:26:28,049:INFO:Total runtime is 0.006839625040690104 minutes
2024-07-21 01:26:28,052:INFO:SubProcess create_model() called ==================================
2024-07-21 01:26:28,053:INFO:Initializing create_model()
2024-07-21 01:26:28,053:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x749040166e60>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x74900ef1e740>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-21 01:26:28,053:INFO:Checking exceptions
2024-07-21 01:26:28,053:INFO:Importing libraries
2024-07-21 01:26:28,053:INFO:Copying training dataset
2024-07-21 01:26:28,056:INFO:Defining folds
2024-07-21 01:26:28,056:INFO:Declaring metric variables
2024-07-21 01:26:28,059:INFO:Importing untrained model
2024-07-21 01:26:28,062:INFO:Lasso Regression Imported successfully
2024-07-21 01:26:28,069:INFO:Starting cross validation
2024-07-21 01:26:28,070:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-21 01:26:28,380:INFO:Calculating mean and std
2024-07-21 01:26:28,380:INFO:Creating metrics dataframe
2024-07-21 01:26:28,382:INFO:Uploading results into container
2024-07-21 01:26:28,382:INFO:Uploading model into container now
2024-07-21 01:26:28,383:INFO:_master_model_container: 2
2024-07-21 01:26:28,383:INFO:_display_container: 2
2024-07-21 01:26:28,383:INFO:Lasso(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=1000, positive=False,
      precompute=False, random_state=35, selection='cyclic', tol=0.0001,
      warm_start=False)
2024-07-21 01:26:28,383:INFO:create_model() successfully completed......................................
2024-07-21 01:26:28,465:INFO:SubProcess create_model() end ==================================
2024-07-21 01:26:28,465:INFO:Creating metrics dataframe
2024-07-21 01:26:28,471:INFO:Initializing Ridge Regression
2024-07-21 01:26:28,471:INFO:Total runtime is 0.013885168234507243 minutes
2024-07-21 01:26:28,474:INFO:SubProcess create_model() called ==================================
2024-07-21 01:26:28,475:INFO:Initializing create_model()
2024-07-21 01:26:28,475:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x749040166e60>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x74900ef1e740>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-21 01:26:28,475:INFO:Checking exceptions
2024-07-21 01:26:28,475:INFO:Importing libraries
2024-07-21 01:26:28,475:INFO:Copying training dataset
2024-07-21 01:26:28,479:INFO:Defining folds
2024-07-21 01:26:28,479:INFO:Declaring metric variables
2024-07-21 01:26:28,482:INFO:Importing untrained model
2024-07-21 01:26:28,485:INFO:Ridge Regression Imported successfully
2024-07-21 01:26:28,491:INFO:Starting cross validation
2024-07-21 01:26:28,493:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-21 01:26:28,809:INFO:Calculating mean and std
2024-07-21 01:26:28,811:INFO:Creating metrics dataframe
2024-07-21 01:26:28,813:INFO:Uploading results into container
2024-07-21 01:26:28,813:INFO:Uploading model into container now
2024-07-21 01:26:28,814:INFO:_master_model_container: 3
2024-07-21 01:26:28,814:INFO:_display_container: 2
2024-07-21 01:26:28,814:INFO:Ridge(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=None, positive=False,
      random_state=35, solver='auto', tol=0.0001)
2024-07-21 01:26:28,814:INFO:create_model() successfully completed......................................
2024-07-21 01:26:28,887:INFO:SubProcess create_model() end ==================================
2024-07-21 01:26:28,887:INFO:Creating metrics dataframe
2024-07-21 01:26:28,894:INFO:Initializing Elastic Net
2024-07-21 01:26:28,894:INFO:Total runtime is 0.020925279458363852 minutes
2024-07-21 01:26:28,897:INFO:SubProcess create_model() called ==================================
2024-07-21 01:26:28,897:INFO:Initializing create_model()
2024-07-21 01:26:28,898:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x749040166e60>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x74900ef1e740>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-21 01:26:28,898:INFO:Checking exceptions
2024-07-21 01:26:28,898:INFO:Importing libraries
2024-07-21 01:26:28,898:INFO:Copying training dataset
2024-07-21 01:26:28,901:INFO:Defining folds
2024-07-21 01:26:28,901:INFO:Declaring metric variables
2024-07-21 01:26:28,904:INFO:Importing untrained model
2024-07-21 01:26:28,907:INFO:Elastic Net Imported successfully
2024-07-21 01:26:28,913:INFO:Starting cross validation
2024-07-21 01:26:28,915:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-21 01:26:29,210:INFO:Calculating mean and std
2024-07-21 01:26:29,211:INFO:Creating metrics dataframe
2024-07-21 01:26:29,213:INFO:Uploading results into container
2024-07-21 01:26:29,214:INFO:Uploading model into container now
2024-07-21 01:26:29,214:INFO:_master_model_container: 4
2024-07-21 01:26:29,215:INFO:_display_container: 2
2024-07-21 01:26:29,215:INFO:ElasticNet(alpha=1.0, copy_X=True, fit_intercept=True, l1_ratio=0.5,
           max_iter=1000, positive=False, precompute=False, random_state=35,
           selection='cyclic', tol=0.0001, warm_start=False)
2024-07-21 01:26:29,215:INFO:create_model() successfully completed......................................
2024-07-21 01:26:29,289:INFO:SubProcess create_model() end ==================================
2024-07-21 01:26:29,289:INFO:Creating metrics dataframe
2024-07-21 01:26:29,296:INFO:Initializing Least Angle Regression
2024-07-21 01:26:29,296:INFO:Total runtime is 0.027625834941864016 minutes
2024-07-21 01:26:29,299:INFO:SubProcess create_model() called ==================================
2024-07-21 01:26:29,299:INFO:Initializing create_model()
2024-07-21 01:26:29,299:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x749040166e60>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x74900ef1e740>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-21 01:26:29,300:INFO:Checking exceptions
2024-07-21 01:26:29,300:INFO:Importing libraries
2024-07-21 01:26:29,300:INFO:Copying training dataset
2024-07-21 01:26:29,303:INFO:Defining folds
2024-07-21 01:26:29,303:INFO:Declaring metric variables
2024-07-21 01:26:29,306:INFO:Importing untrained model
2024-07-21 01:26:29,309:INFO:Least Angle Regression Imported successfully
2024-07-21 01:26:29,315:INFO:Starting cross validation
2024-07-21 01:26:29,316:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-21 01:26:29,624:INFO:Calculating mean and std
2024-07-21 01:26:29,625:INFO:Creating metrics dataframe
2024-07-21 01:26:29,627:INFO:Uploading results into container
2024-07-21 01:26:29,628:INFO:Uploading model into container now
2024-07-21 01:26:29,628:INFO:_master_model_container: 5
2024-07-21 01:26:29,628:INFO:_display_container: 2
2024-07-21 01:26:29,629:INFO:Lars(copy_X=True, eps=2.220446049250313e-16, fit_intercept=True, fit_path=True,
     jitter=None, n_nonzero_coefs=500, precompute='auto', random_state=35,
     verbose=False)
2024-07-21 01:26:29,629:INFO:create_model() successfully completed......................................
2024-07-21 01:26:29,708:INFO:SubProcess create_model() end ==================================
2024-07-21 01:26:29,709:INFO:Creating metrics dataframe
2024-07-21 01:26:29,716:INFO:Initializing Lasso Least Angle Regression
2024-07-21 01:26:29,716:INFO:Total runtime is 0.03463496764500936 minutes
2024-07-21 01:26:29,721:INFO:SubProcess create_model() called ==================================
2024-07-21 01:26:29,722:INFO:Initializing create_model()
2024-07-21 01:26:29,722:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x749040166e60>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x74900ef1e740>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-21 01:26:29,722:INFO:Checking exceptions
2024-07-21 01:26:29,722:INFO:Importing libraries
2024-07-21 01:26:29,722:INFO:Copying training dataset
2024-07-21 01:26:29,727:INFO:Defining folds
2024-07-21 01:26:29,727:INFO:Declaring metric variables
2024-07-21 01:26:29,731:INFO:Importing untrained model
2024-07-21 01:26:29,735:INFO:Lasso Least Angle Regression Imported successfully
2024-07-21 01:26:29,743:INFO:Starting cross validation
2024-07-21 01:26:29,745:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-21 01:26:30,081:INFO:Calculating mean and std
2024-07-21 01:26:30,083:INFO:Creating metrics dataframe
2024-07-21 01:26:30,086:INFO:Uploading results into container
2024-07-21 01:26:30,086:INFO:Uploading model into container now
2024-07-21 01:26:30,087:INFO:_master_model_container: 6
2024-07-21 01:26:30,087:INFO:_display_container: 2
2024-07-21 01:26:30,087:INFO:LassoLars(alpha=1.0, copy_X=True, eps=2.220446049250313e-16, fit_intercept=True,
          fit_path=True, jitter=None, max_iter=500, positive=False,
          precompute='auto', random_state=35, verbose=False)
2024-07-21 01:26:30,087:INFO:create_model() successfully completed......................................
2024-07-21 01:26:30,169:INFO:SubProcess create_model() end ==================================
2024-07-21 01:26:30,169:INFO:Creating metrics dataframe
2024-07-21 01:26:30,177:INFO:Initializing Orthogonal Matching Pursuit
2024-07-21 01:26:30,177:INFO:Total runtime is 0.04230946699778239 minutes
2024-07-21 01:26:30,180:INFO:SubProcess create_model() called ==================================
2024-07-21 01:26:30,181:INFO:Initializing create_model()
2024-07-21 01:26:30,181:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x749040166e60>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x74900ef1e740>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-21 01:26:30,181:INFO:Checking exceptions
2024-07-21 01:26:30,181:INFO:Importing libraries
2024-07-21 01:26:30,181:INFO:Copying training dataset
2024-07-21 01:26:30,185:INFO:Defining folds
2024-07-21 01:26:30,185:INFO:Declaring metric variables
2024-07-21 01:26:30,188:INFO:Importing untrained model
2024-07-21 01:26:30,192:INFO:Orthogonal Matching Pursuit Imported successfully
2024-07-21 01:26:30,197:INFO:Starting cross validation
2024-07-21 01:26:30,199:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-21 01:26:30,513:INFO:Calculating mean and std
2024-07-21 01:26:30,514:INFO:Creating metrics dataframe
2024-07-21 01:26:30,516:INFO:Uploading results into container
2024-07-21 01:26:30,516:INFO:Uploading model into container now
2024-07-21 01:26:30,516:INFO:_master_model_container: 7
2024-07-21 01:26:30,516:INFO:_display_container: 2
2024-07-21 01:26:30,517:INFO:OrthogonalMatchingPursuit(fit_intercept=True, n_nonzero_coefs=None,
                          precompute='auto', tol=None)
2024-07-21 01:26:30,517:INFO:create_model() successfully completed......................................
2024-07-21 01:26:30,591:INFO:SubProcess create_model() end ==================================
2024-07-21 01:26:30,591:INFO:Creating metrics dataframe
2024-07-21 01:26:30,598:INFO:Initializing Bayesian Ridge
2024-07-21 01:26:30,598:INFO:Total runtime is 0.04933522542317708 minutes
2024-07-21 01:26:30,602:INFO:SubProcess create_model() called ==================================
2024-07-21 01:26:30,602:INFO:Initializing create_model()
2024-07-21 01:26:30,602:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x749040166e60>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x74900ef1e740>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-21 01:26:30,602:INFO:Checking exceptions
2024-07-21 01:26:30,602:INFO:Importing libraries
2024-07-21 01:26:30,602:INFO:Copying training dataset
2024-07-21 01:26:30,605:INFO:Defining folds
2024-07-21 01:26:30,606:INFO:Declaring metric variables
2024-07-21 01:26:30,608:INFO:Importing untrained model
2024-07-21 01:26:30,611:INFO:Bayesian Ridge Imported successfully
2024-07-21 01:26:30,618:INFO:Starting cross validation
2024-07-21 01:26:30,620:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-21 01:26:30,922:INFO:Calculating mean and std
2024-07-21 01:26:30,924:INFO:Creating metrics dataframe
2024-07-21 01:26:30,925:INFO:Uploading results into container
2024-07-21 01:26:30,926:INFO:Uploading model into container now
2024-07-21 01:26:30,927:INFO:_master_model_container: 8
2024-07-21 01:26:30,927:INFO:_display_container: 2
2024-07-21 01:26:30,927:INFO:BayesianRidge(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
              compute_score=False, copy_X=True, fit_intercept=True,
              lambda_1=1e-06, lambda_2=1e-06, lambda_init=None, max_iter=None,
              n_iter='deprecated', tol=0.001, verbose=False)
2024-07-21 01:26:30,927:INFO:create_model() successfully completed......................................
2024-07-21 01:26:31,001:INFO:SubProcess create_model() end ==================================
2024-07-21 01:26:31,001:INFO:Creating metrics dataframe
2024-07-21 01:26:31,009:INFO:Initializing Passive Aggressive Regressor
2024-07-21 01:26:31,009:INFO:Total runtime is 0.0561733603477478 minutes
2024-07-21 01:26:31,012:INFO:SubProcess create_model() called ==================================
2024-07-21 01:26:31,012:INFO:Initializing create_model()
2024-07-21 01:26:31,012:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x749040166e60>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x74900ef1e740>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-21 01:26:31,012:INFO:Checking exceptions
2024-07-21 01:26:31,012:INFO:Importing libraries
2024-07-21 01:26:31,012:INFO:Copying training dataset
2024-07-21 01:26:31,015:INFO:Defining folds
2024-07-21 01:26:31,016:INFO:Declaring metric variables
2024-07-21 01:26:31,018:INFO:Importing untrained model
2024-07-21 01:26:31,021:INFO:Passive Aggressive Regressor Imported successfully
2024-07-21 01:26:31,027:INFO:Starting cross validation
2024-07-21 01:26:31,029:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-21 01:26:31,345:INFO:Calculating mean and std
2024-07-21 01:26:31,346:INFO:Creating metrics dataframe
2024-07-21 01:26:31,348:INFO:Uploading results into container
2024-07-21 01:26:31,349:INFO:Uploading model into container now
2024-07-21 01:26:31,349:INFO:_master_model_container: 9
2024-07-21 01:26:31,349:INFO:_display_container: 2
2024-07-21 01:26:31,350:INFO:PassiveAggressiveRegressor(C=1.0, average=False, early_stopping=False,
                           epsilon=0.1, fit_intercept=True,
                           loss='epsilon_insensitive', max_iter=1000,
                           n_iter_no_change=5, random_state=35, shuffle=True,
                           tol=0.001, validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-07-21 01:26:31,350:INFO:create_model() successfully completed......................................
2024-07-21 01:26:31,421:INFO:SubProcess create_model() end ==================================
2024-07-21 01:26:31,421:INFO:Creating metrics dataframe
2024-07-21 01:26:31,429:INFO:Initializing Huber Regressor
2024-07-21 01:26:31,429:INFO:Total runtime is 0.06318453550338746 minutes
2024-07-21 01:26:31,433:INFO:SubProcess create_model() called ==================================
2024-07-21 01:26:31,433:INFO:Initializing create_model()
2024-07-21 01:26:31,433:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x749040166e60>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x74900ef1e740>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-21 01:26:31,433:INFO:Checking exceptions
2024-07-21 01:26:31,433:INFO:Importing libraries
2024-07-21 01:26:31,434:INFO:Copying training dataset
2024-07-21 01:26:31,437:INFO:Defining folds
2024-07-21 01:26:31,437:INFO:Declaring metric variables
2024-07-21 01:26:31,439:INFO:Importing untrained model
2024-07-21 01:26:31,442:INFO:Huber Regressor Imported successfully
2024-07-21 01:26:31,448:INFO:Starting cross validation
2024-07-21 01:26:31,450:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-21 01:26:31,570:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-07-21 01:26:31,572:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-07-21 01:26:31,581:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-07-21 01:26:31,595:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-07-21 01:26:31,723:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-07-21 01:26:31,730:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-07-21 01:26:31,735:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-07-21 01:26:31,741:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-07-21 01:26:31,825:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-07-21 01:26:31,827:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-07-21 01:26:31,855:INFO:Calculating mean and std
2024-07-21 01:26:31,856:INFO:Creating metrics dataframe
2024-07-21 01:26:31,858:INFO:Uploading results into container
2024-07-21 01:26:31,859:INFO:Uploading model into container now
2024-07-21 01:26:31,860:INFO:_master_model_container: 10
2024-07-21 01:26:31,860:INFO:_display_container: 2
2024-07-21 01:26:31,860:INFO:HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False)
2024-07-21 01:26:31,860:INFO:create_model() successfully completed......................................
2024-07-21 01:26:31,934:INFO:SubProcess create_model() end ==================================
2024-07-21 01:26:31,934:INFO:Creating metrics dataframe
2024-07-21 01:26:31,942:INFO:Initializing K Neighbors Regressor
2024-07-21 01:26:31,942:INFO:Total runtime is 0.07172860701878866 minutes
2024-07-21 01:26:31,945:INFO:SubProcess create_model() called ==================================
2024-07-21 01:26:31,945:INFO:Initializing create_model()
2024-07-21 01:26:31,945:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x749040166e60>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x74900ef1e740>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-21 01:26:31,946:INFO:Checking exceptions
2024-07-21 01:26:31,946:INFO:Importing libraries
2024-07-21 01:26:31,946:INFO:Copying training dataset
2024-07-21 01:26:31,949:INFO:Defining folds
2024-07-21 01:26:31,949:INFO:Declaring metric variables
2024-07-21 01:26:31,952:INFO:Importing untrained model
2024-07-21 01:26:31,955:INFO:K Neighbors Regressor Imported successfully
2024-07-21 01:26:31,961:INFO:Starting cross validation
2024-07-21 01:26:31,962:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-21 01:26:32,305:INFO:Calculating mean and std
2024-07-21 01:26:32,306:INFO:Creating metrics dataframe
2024-07-21 01:26:32,308:INFO:Uploading results into container
2024-07-21 01:26:32,309:INFO:Uploading model into container now
2024-07-21 01:26:32,309:INFO:_master_model_container: 11
2024-07-21 01:26:32,309:INFO:_display_container: 2
2024-07-21 01:26:32,310:INFO:KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform')
2024-07-21 01:26:32,310:INFO:create_model() successfully completed......................................
2024-07-21 01:26:32,383:INFO:SubProcess create_model() end ==================================
2024-07-21 01:26:32,383:INFO:Creating metrics dataframe
2024-07-21 01:26:32,392:INFO:Initializing Decision Tree Regressor
2024-07-21 01:26:32,392:INFO:Total runtime is 0.07922591368357342 minutes
2024-07-21 01:26:32,395:INFO:SubProcess create_model() called ==================================
2024-07-21 01:26:32,395:INFO:Initializing create_model()
2024-07-21 01:26:32,396:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x749040166e60>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x74900ef1e740>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-21 01:26:32,396:INFO:Checking exceptions
2024-07-21 01:26:32,396:INFO:Importing libraries
2024-07-21 01:26:32,396:INFO:Copying training dataset
2024-07-21 01:26:32,399:INFO:Defining folds
2024-07-21 01:26:32,399:INFO:Declaring metric variables
2024-07-21 01:26:32,402:INFO:Importing untrained model
2024-07-21 01:26:32,405:INFO:Decision Tree Regressor Imported successfully
2024-07-21 01:26:32,413:INFO:Starting cross validation
2024-07-21 01:26:32,414:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-21 01:26:32,766:INFO:Calculating mean and std
2024-07-21 01:26:32,767:INFO:Creating metrics dataframe
2024-07-21 01:26:32,769:INFO:Uploading results into container
2024-07-21 01:26:32,770:INFO:Uploading model into container now
2024-07-21 01:26:32,770:INFO:_master_model_container: 12
2024-07-21 01:26:32,771:INFO:_display_container: 2
2024-07-21 01:26:32,771:INFO:DecisionTreeRegressor(ccp_alpha=0.0, criterion='squared_error', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      monotonic_cst=None, random_state=35, splitter='best')
2024-07-21 01:26:32,771:INFO:create_model() successfully completed......................................
2024-07-21 01:26:32,842:INFO:SubProcess create_model() end ==================================
2024-07-21 01:26:32,843:INFO:Creating metrics dataframe
2024-07-21 01:26:32,851:INFO:Initializing Random Forest Regressor
2024-07-21 01:26:32,851:INFO:Total runtime is 0.08688215017318726 minutes
2024-07-21 01:26:32,854:INFO:SubProcess create_model() called ==================================
2024-07-21 01:26:32,855:INFO:Initializing create_model()
2024-07-21 01:26:32,855:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x749040166e60>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x74900ef1e740>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-21 01:26:32,855:INFO:Checking exceptions
2024-07-21 01:26:32,855:INFO:Importing libraries
2024-07-21 01:26:32,855:INFO:Copying training dataset
2024-07-21 01:26:32,858:INFO:Defining folds
2024-07-21 01:26:32,858:INFO:Declaring metric variables
2024-07-21 01:26:32,861:INFO:Importing untrained model
2024-07-21 01:26:32,864:INFO:Random Forest Regressor Imported successfully
2024-07-21 01:26:32,870:INFO:Starting cross validation
2024-07-21 01:26:32,872:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-21 01:26:34,054:INFO:Calculating mean and std
2024-07-21 01:26:34,055:INFO:Creating metrics dataframe
2024-07-21 01:26:34,057:INFO:Uploading results into container
2024-07-21 01:26:34,058:INFO:Uploading model into container now
2024-07-21 01:26:34,059:INFO:_master_model_container: 13
2024-07-21 01:26:34,059:INFO:_display_container: 2
2024-07-21 01:26:34,059:INFO:RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=None, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, monotonic_cst=None,
                      n_estimators=100, n_jobs=-1, oob_score=False,
                      random_state=35, verbose=0, warm_start=False)
2024-07-21 01:26:34,060:INFO:create_model() successfully completed......................................
2024-07-21 01:26:34,129:INFO:SubProcess create_model() end ==================================
2024-07-21 01:26:34,129:INFO:Creating metrics dataframe
2024-07-21 01:26:34,139:INFO:Initializing Extra Trees Regressor
2024-07-21 01:26:34,139:INFO:Total runtime is 0.10834215084711711 minutes
2024-07-21 01:26:34,142:INFO:SubProcess create_model() called ==================================
2024-07-21 01:26:34,143:INFO:Initializing create_model()
2024-07-21 01:26:34,143:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x749040166e60>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x74900ef1e740>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-21 01:26:34,143:INFO:Checking exceptions
2024-07-21 01:26:34,143:INFO:Importing libraries
2024-07-21 01:26:34,143:INFO:Copying training dataset
2024-07-21 01:26:34,146:INFO:Defining folds
2024-07-21 01:26:34,146:INFO:Declaring metric variables
2024-07-21 01:26:34,149:INFO:Importing untrained model
2024-07-21 01:26:34,152:INFO:Extra Trees Regressor Imported successfully
2024-07-21 01:26:34,158:INFO:Starting cross validation
2024-07-21 01:26:34,160:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-21 01:26:35,299:INFO:Calculating mean and std
2024-07-21 01:26:35,301:INFO:Creating metrics dataframe
2024-07-21 01:26:35,303:INFO:Uploading results into container
2024-07-21 01:26:35,303:INFO:Uploading model into container now
2024-07-21 01:26:35,303:INFO:_master_model_container: 14
2024-07-21 01:26:35,304:INFO:_display_container: 2
2024-07-21 01:26:35,304:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='squared_error',
                    max_depth=None, max_features=1.0, max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, monotonic_cst=None,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=35, verbose=0, warm_start=False)
2024-07-21 01:26:35,304:INFO:create_model() successfully completed......................................
2024-07-21 01:26:35,379:INFO:SubProcess create_model() end ==================================
2024-07-21 01:26:35,379:INFO:Creating metrics dataframe
2024-07-21 01:26:35,389:INFO:Initializing AdaBoost Regressor
2024-07-21 01:26:35,389:INFO:Total runtime is 0.12917816638946533 minutes
2024-07-21 01:26:35,392:INFO:SubProcess create_model() called ==================================
2024-07-21 01:26:35,393:INFO:Initializing create_model()
2024-07-21 01:26:35,393:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x749040166e60>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x74900ef1e740>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-21 01:26:35,393:INFO:Checking exceptions
2024-07-21 01:26:35,393:INFO:Importing libraries
2024-07-21 01:26:35,393:INFO:Copying training dataset
2024-07-21 01:26:35,396:INFO:Defining folds
2024-07-21 01:26:35,396:INFO:Declaring metric variables
2024-07-21 01:26:35,399:INFO:Importing untrained model
2024-07-21 01:26:35,402:INFO:AdaBoost Regressor Imported successfully
2024-07-21 01:26:35,409:INFO:Starting cross validation
2024-07-21 01:26:35,411:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-21 01:26:35,757:INFO:Calculating mean and std
2024-07-21 01:26:35,757:INFO:Creating metrics dataframe
2024-07-21 01:26:35,759:INFO:Uploading results into container
2024-07-21 01:26:35,760:INFO:Uploading model into container now
2024-07-21 01:26:35,760:INFO:_master_model_container: 15
2024-07-21 01:26:35,760:INFO:_display_container: 2
2024-07-21 01:26:35,761:INFO:AdaBoostRegressor(estimator=None, learning_rate=1.0, loss='linear',
                  n_estimators=50, random_state=35)
2024-07-21 01:26:35,761:INFO:create_model() successfully completed......................................
2024-07-21 01:26:35,836:INFO:SubProcess create_model() end ==================================
2024-07-21 01:26:35,836:INFO:Creating metrics dataframe
2024-07-21 01:26:35,846:INFO:Initializing Gradient Boosting Regressor
2024-07-21 01:26:35,846:INFO:Total runtime is 0.13679823478062947 minutes
2024-07-21 01:26:35,850:INFO:SubProcess create_model() called ==================================
2024-07-21 01:26:35,850:INFO:Initializing create_model()
2024-07-21 01:26:35,850:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x749040166e60>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x74900ef1e740>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-21 01:26:35,850:INFO:Checking exceptions
2024-07-21 01:26:35,850:INFO:Importing libraries
2024-07-21 01:26:35,850:INFO:Copying training dataset
2024-07-21 01:26:35,854:INFO:Defining folds
2024-07-21 01:26:35,854:INFO:Declaring metric variables
2024-07-21 01:26:35,856:INFO:Importing untrained model
2024-07-21 01:26:35,860:INFO:Gradient Boosting Regressor Imported successfully
2024-07-21 01:26:35,867:INFO:Starting cross validation
2024-07-21 01:26:35,868:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-21 01:26:36,475:INFO:Calculating mean and std
2024-07-21 01:26:36,476:INFO:Creating metrics dataframe
2024-07-21 01:26:36,478:INFO:Uploading results into container
2024-07-21 01:26:36,479:INFO:Uploading model into container now
2024-07-21 01:26:36,479:INFO:_master_model_container: 16
2024-07-21 01:26:36,479:INFO:_display_container: 2
2024-07-21 01:26:36,480:INFO:GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='squared_error',
                          max_depth=3, max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_samples_leaf=1,
                          min_samples_split=2, min_weight_fraction_leaf=0.0,
                          n_estimators=100, n_iter_no_change=None,
                          random_state=35, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False)
2024-07-21 01:26:36,480:INFO:create_model() successfully completed......................................
2024-07-21 01:26:36,549:INFO:SubProcess create_model() end ==================================
2024-07-21 01:26:36,550:INFO:Creating metrics dataframe
2024-07-21 01:26:36,559:INFO:Initializing Light Gradient Boosting Machine
2024-07-21 01:26:36,560:INFO:Total runtime is 0.14868849913279214 minutes
2024-07-21 01:26:36,563:INFO:SubProcess create_model() called ==================================
2024-07-21 01:26:36,563:INFO:Initializing create_model()
2024-07-21 01:26:36,563:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x749040166e60>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x74900ef1e740>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-21 01:26:36,563:INFO:Checking exceptions
2024-07-21 01:26:36,563:INFO:Importing libraries
2024-07-21 01:26:36,563:INFO:Copying training dataset
2024-07-21 01:26:36,566:INFO:Defining folds
2024-07-21 01:26:36,566:INFO:Declaring metric variables
2024-07-21 01:26:36,569:INFO:Importing untrained model
2024-07-21 01:26:36,572:INFO:Light Gradient Boosting Machine Imported successfully
2024-07-21 01:26:36,578:INFO:Starting cross validation
2024-07-21 01:26:36,580:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-21 01:29:29,352:INFO:Calculating mean and std
2024-07-21 01:29:29,353:INFO:Creating metrics dataframe
2024-07-21 01:29:29,357:INFO:Uploading results into container
2024-07-21 01:29:29,357:INFO:Uploading model into container now
2024-07-21 01:29:29,358:INFO:_master_model_container: 17
2024-07-21 01:29:29,358:INFO:_display_container: 2
2024-07-21 01:29:29,358:INFO:LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=35, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
              subsample_for_bin=200000, subsample_freq=0)
2024-07-21 01:29:29,358:INFO:create_model() successfully completed......................................
2024-07-21 01:29:29,427:INFO:SubProcess create_model() end ==================================
2024-07-21 01:29:29,427:INFO:Creating metrics dataframe
2024-07-21 01:29:29,437:INFO:Initializing Dummy Regressor
2024-07-21 01:29:29,438:INFO:Total runtime is 3.0299875855445864 minutes
2024-07-21 01:29:29,442:INFO:SubProcess create_model() called ==================================
2024-07-21 01:29:29,442:INFO:Initializing create_model()
2024-07-21 01:29:29,442:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x749040166e60>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x74900ef1e740>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-21 01:29:29,442:INFO:Checking exceptions
2024-07-21 01:29:29,442:INFO:Importing libraries
2024-07-21 01:29:29,442:INFO:Copying training dataset
2024-07-21 01:29:29,446:INFO:Defining folds
2024-07-21 01:29:29,446:INFO:Declaring metric variables
2024-07-21 01:29:29,448:INFO:Importing untrained model
2024-07-21 01:29:29,452:INFO:Dummy Regressor Imported successfully
2024-07-21 01:29:29,458:INFO:Starting cross validation
2024-07-21 01:29:29,459:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-21 01:29:29,767:INFO:Calculating mean and std
2024-07-21 01:29:29,768:INFO:Creating metrics dataframe
2024-07-21 01:29:29,770:INFO:Uploading results into container
2024-07-21 01:29:29,770:INFO:Uploading model into container now
2024-07-21 01:29:29,771:INFO:_master_model_container: 18
2024-07-21 01:29:29,771:INFO:_display_container: 2
2024-07-21 01:29:29,772:INFO:DummyRegressor(constant=None, quantile=None, strategy='mean')
2024-07-21 01:29:29,772:INFO:create_model() successfully completed......................................
2024-07-21 01:29:29,839:INFO:SubProcess create_model() end ==================================
2024-07-21 01:29:29,839:INFO:Creating metrics dataframe
2024-07-21 01:29:29,849:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2024-07-21 01:29:29,856:INFO:Initializing create_model()
2024-07-21 01:29:29,856:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x749040166e60>, estimator=GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='squared_error',
                          max_depth=3, max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_samples_leaf=1,
                          min_samples_split=2, min_weight_fraction_leaf=0.0,
                          n_estimators=100, n_iter_no_change=None,
                          random_state=35, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-21 01:29:29,856:INFO:Checking exceptions
2024-07-21 01:29:29,858:INFO:Importing libraries
2024-07-21 01:29:29,858:INFO:Copying training dataset
2024-07-21 01:29:29,861:INFO:Defining folds
2024-07-21 01:29:29,861:INFO:Declaring metric variables
2024-07-21 01:29:29,861:INFO:Importing untrained model
2024-07-21 01:29:29,861:INFO:Declaring custom model
2024-07-21 01:29:29,862:INFO:Gradient Boosting Regressor Imported successfully
2024-07-21 01:29:29,863:INFO:Cross validation set to False
2024-07-21 01:29:29,863:INFO:Fitting Model
2024-07-21 01:29:29,984:INFO:GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='squared_error',
                          max_depth=3, max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_samples_leaf=1,
                          min_samples_split=2, min_weight_fraction_leaf=0.0,
                          n_estimators=100, n_iter_no_change=None,
                          random_state=35, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False)
2024-07-21 01:29:29,984:INFO:create_model() successfully completed......................................
2024-07-21 01:29:30,082:INFO:_master_model_container: 18
2024-07-21 01:29:30,082:INFO:_display_container: 2
2024-07-21 01:29:30,082:INFO:GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='squared_error',
                          max_depth=3, max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_samples_leaf=1,
                          min_samples_split=2, min_weight_fraction_leaf=0.0,
                          n_estimators=100, n_iter_no_change=None,
                          random_state=35, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False)
2024-07-21 01:29:30,082:INFO:compare_models() successfully completed......................................
2024-07-21 01:32:16,129:INFO:Initializing create_model()
2024-07-21 01:32:16,130:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x749040166e60>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-21 01:32:16,130:INFO:Checking exceptions
2024-07-21 01:32:16,144:INFO:Importing libraries
2024-07-21 01:32:16,144:INFO:Copying training dataset
2024-07-21 01:32:16,148:INFO:Defining folds
2024-07-21 01:32:16,148:INFO:Declaring metric variables
2024-07-21 01:32:16,151:INFO:Importing untrained model
2024-07-21 01:32:16,154:INFO:Random Forest Regressor Imported successfully
2024-07-21 01:32:16,160:INFO:Starting cross validation
2024-07-21 01:32:16,162:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-21 01:32:17,442:INFO:Calculating mean and std
2024-07-21 01:32:17,443:INFO:Creating metrics dataframe
2024-07-21 01:32:17,448:INFO:Finalizing model
2024-07-21 01:32:17,627:INFO:Uploading results into container
2024-07-21 01:32:17,628:INFO:Uploading model into container now
2024-07-21 01:32:17,636:INFO:_master_model_container: 19
2024-07-21 01:32:17,636:INFO:_display_container: 3
2024-07-21 01:32:17,637:INFO:RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=None, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, monotonic_cst=None,
                      n_estimators=100, n_jobs=-1, oob_score=False,
                      random_state=35, verbose=0, warm_start=False)
2024-07-21 01:32:17,637:INFO:create_model() successfully completed......................................
2024-07-21 01:33:55,786:INFO:Initializing plot_model()
2024-07-21 01:33:55,786:INFO:plot_model(plot=residuals, fold=None, verbose=True, display=None, display_format=None, estimator=RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=None, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, monotonic_cst=None,
                      n_estimators=100, n_jobs=-1, oob_score=False,
                      random_state=35, verbose=0, warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x749040166e60>, system=True)
2024-07-21 01:33:55,786:INFO:Checking exceptions
2024-07-21 01:33:55,813:INFO:Preloading libraries
2024-07-21 01:33:55,827:INFO:Copying training dataset
2024-07-21 01:33:55,827:INFO:Plot type: residuals
2024-07-21 01:33:56,045:INFO:Fitting Model
2024-07-21 01:33:56,045:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/base.py:493: UserWarning: X does not have valid feature names, but RandomForestRegressor was fitted with feature names
  warnings.warn(

2024-07-21 01:33:56,127:INFO:Scoring test/hold-out set
2024-07-21 01:33:56,228:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,228:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,229:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,230:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,230:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,231:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif

2024-07-21 01:33:56,231:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,232:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,232:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,233:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,236:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,237:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,238:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,238:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,251:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,251:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,252:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,252:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,253:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,260:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,280:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,282:WARNING:findfont: Font family ['sans-serif'] not found. Falling back to DejaVu Sans.
2024-07-21 01:33:56,282:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,337:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,343:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,343:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,346:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,346:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,347:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,347:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,347:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,348:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,352:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,354:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,401:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,402:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,421:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,421:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,447:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,447:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,466:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,466:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,467:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,467:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,467:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,468:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,468:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,469:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,469:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,471:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,472:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,472:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,473:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,475:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,476:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,476:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,477:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,477:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,478:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,479:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,480:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,480:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,481:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,482:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,483:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,486:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,486:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,489:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,490:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,491:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,491:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,492:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,493:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,493:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,494:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,497:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,505:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,507:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,510:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,516:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,517:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,519:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,520:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,520:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,521:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,521:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,522:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,524:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,525:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,525:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,528:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,528:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,531:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,532:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,533:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,533:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,534:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,535:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,536:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,536:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:33:56,623:INFO:Visual Rendered Successfully
2024-07-21 01:33:56,702:INFO:plot_model() successfully completed......................................
2024-07-21 01:35:32,559:INFO:Initializing plot_model()
2024-07-21 01:35:32,560:INFO:plot_model(plot=error, fold=None, verbose=True, display=None, display_format=None, estimator=RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=None, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, monotonic_cst=None,
                      n_estimators=100, n_jobs=-1, oob_score=False,
                      random_state=35, verbose=0, warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x749040166e60>, system=True)
2024-07-21 01:35:32,560:INFO:Checking exceptions
2024-07-21 01:35:32,586:INFO:Preloading libraries
2024-07-21 01:35:32,596:INFO:Copying training dataset
2024-07-21 01:35:32,596:INFO:Plot type: error
2024-07-21 01:35:32,771:INFO:Fitting Model
2024-07-21 01:35:32,771:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/base.py:493: UserWarning: X does not have valid feature names, but RandomForestRegressor was fitted with feature names
  warnings.warn(

2024-07-21 01:35:32,771:INFO:Scoring test/hold-out set
2024-07-21 01:35:32,854:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:32,854:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:32,855:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:32,855:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:32,856:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:32,859:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:32,860:WARNING:findfont: Font family ['sans-serif'] not found. Falling back to DejaVu Sans.
2024-07-21 01:35:32,860:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:32,865:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:32,866:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:32,893:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:32,899:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:32,899:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:32,900:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:32,900:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:32,902:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:32,903:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:32,904:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:32,906:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:32,906:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:32,907:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:32,909:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:32,910:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:32,911:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:32,911:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:32,916:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:32,917:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:32,943:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:32,944:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:32,944:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:32,953:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:32,954:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:32,954:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:32,971:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:32,972:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:32,973:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:32,980:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:32,981:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:32,981:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:32,982:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:32,983:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:32,985:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:32,988:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:32,988:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:32,992:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:32,993:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:32,994:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:32,994:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:33,002:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:33,003:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:33,004:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:33,004:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:33,015:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:33,016:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:33,023:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:33,023:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:33,024:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:33,024:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:33,027:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:33,027:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:33,027:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:33,029:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:33,029:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:33,030:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:33,030:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:33,031:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:33,031:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:33,032:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:33,035:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:33,036:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:33,036:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:33,037:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:33,075:INFO:Visual Rendered Successfully
2024-07-21 01:35:33,149:INFO:plot_model() successfully completed......................................
2024-07-21 01:35:43,147:INFO:Initializing plot_model()
2024-07-21 01:35:43,147:INFO:plot_model(plot=feature, fold=None, verbose=True, display=None, display_format=None, estimator=RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=None, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, monotonic_cst=None,
                      n_estimators=100, n_jobs=-1, oob_score=False,
                      random_state=35, verbose=0, warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x749040166e60>, system=True)
2024-07-21 01:35:43,148:INFO:Checking exceptions
2024-07-21 01:35:43,176:INFO:Preloading libraries
2024-07-21 01:35:43,185:INFO:Copying training dataset
2024-07-21 01:35:43,185:INFO:Plot type: feature
2024-07-21 01:35:43,186:WARNING:No coef_ found. Trying feature_importances_
2024-07-21 01:35:43,277:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:43,277:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:43,278:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:43,279:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:43,279:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:43,280:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:43,280:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:43,281:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:43,281:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:43,281:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:43,284:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:43,284:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:43,284:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:43,285:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:43,293:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:43,293:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:43,293:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:43,294:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:43,294:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:43,295:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:43,295:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:43,300:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:43,344:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:43,345:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:43,346:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:43,346:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:43,347:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:43,348:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:43,348:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:43,349:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:43,349:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:43,350:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:43,353:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:43,353:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:43,354:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:43,354:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:43,358:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:43,358:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:43,359:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:43,359:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:43,360:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:43,360:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:43,361:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:43,362:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:43,363:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:43,364:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:43,365:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:43,366:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:43,366:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:43,367:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:43,373:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:43,374:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:43,379:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:43,380:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:43,382:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:43,383:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:43,384:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:43,385:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:43,386:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:43,387:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:43,388:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:43,392:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:43,394:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2024-07-21 01:35:43,417:INFO:Visual Rendered Successfully
2024-07-21 01:35:43,492:INFO:plot_model() successfully completed......................................
2024-07-21 01:35:53,421:INFO:Initializing predict_model()
2024-07-21 01:35:53,421:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x749040166e60>, estimator=RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=None, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, monotonic_cst=None,
                      n_estimators=100, n_jobs=-1, oob_score=False,
                      random_state=35, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x74900e111360>)
2024-07-21 01:35:53,422:INFO:Checking exceptions
2024-07-21 01:35:53,422:INFO:Preloading libraries
2024-07-21 01:35:53,424:INFO:Set up data.
2024-07-21 01:35:53,429:INFO:Set up index.
2024-07-21 01:35:53,499:WARNING:/usr/local/python/3.10.13/lib/python3.10/site-packages/sklearn/metrics/_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

